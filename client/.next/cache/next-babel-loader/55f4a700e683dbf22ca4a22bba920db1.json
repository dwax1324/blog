{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useMeQuery, usePostsQuery } from \"../generated/graphql\";\nimport NextLink from \"next/link\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { Box, Text, Image, Link } from \"@chakra-ui/core\";\nimport EditDeleteButtons from \"../components/EditDeleteButtons\";\n\nconst Home = () => {\n  var _me$data;\n\n  const {\n    data,\n    loading\n  } = usePostsQuery();\n  const me = useMeQuery();\n\n  if (!loading && !data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"sorry, somthing happend\");\n  }\n\n  const ME = (_me$data = me.data) === null || _me$data === void 0 ? void 0 : _me$data.me;\n  return data ? __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    src: \"/main.jpg\",\n    w: \"75%\",\n    h: \"75%\",\n    mt: \"50px\",\n    mb: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    w: \"75%\",\n    h: \"600px\",\n    style: {\n      display: \"flex\",\n      alignItems: \"left\",\n      justifyContent: \"left\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      flexFlow: \"row wrap\",\n      alignContent: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, data.posts.map(post => __jsx(Box, {\n    borderRadius: \"5px\",\n    border: \"1px solid grey\",\n    shadow: \" 1px 1px 1px grey\",\n    boxShadow: \"2px 2px 5px rgba(0,0,0,0.5)\",\n    p: \"20px\",\n    w: \"45%\",\n    h: \"45%\",\n    ml: \"3%\",\n    mb: \"40px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(NextLink, {\n    href: \"/:id\",\n    as: `/post/${post.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    _hover: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(Image, {\n    objectFit: \"cover\",\n    size: \"150px\",\n    src: post.thumbnail,\n    style: {\n      maxWidth: \"100px\",\n      height: \"auto !important\"\n    },\n    alt: \"thumnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }))), __jsx(NextLink, {\n    href: \"/:id\",\n    as: `/post/${post.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    _hover: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    display: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, post.title)))), ME ? __jsx(EditDeleteButtons, {\n    title: post.title,\n    postId: parseInt(post.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }) : 'ã…¤'))))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"'\\u3164'\");\n};\n\nexport default withApollo({\n  ssr: true\n})(Home);","map":{"version":3,"sources":["/home/develop/blog/client/pages/index.tsx"],"names":["React","useMeQuery","usePostsQuery","NextLink","withApollo","Box","Text","Image","Link","EditDeleteButtons","Home","data","loading","me","ME","display","alignItems","justifyContent","flexDirection","flexWrap","flexFlow","alignContent","posts","map","post","id","textDecoration","thumbnail","maxWidth","height","title","parseInt","ssr"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useMeQuery, usePostsQuery } from \"../generated/graphql\"\nimport NextLink from \"next/link\"\nimport { withApollo } from \"../utils/withApollo\"\nimport { Box, Text, Image, Link } from \"@chakra-ui/core\"\nimport EditDeleteButtons from \"../components/EditDeleteButtons\"\n\ninterface homeProps { }\n\nexport interface RequestInfo {\n  data: string\n}\n\nconst Home: React.FC<{}> = () => {\n  const { data, loading } = usePostsQuery()\n  const me = useMeQuery()\n\n  if (!loading && !data) {\n    return <div>sorry, somthing happend</div>\n  }\n  const ME = me.data?.me\n  return data ? (\n    <>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n      >\n        <Image src=\"/main.jpg\" w=\"75%\" h=\"75%\" mt=\"50px\" mb=\"50px\" />\n        <Box\n          w=\"75%\"\n          h=\"600px\"\n          style={{\n            display: \"flex\",\n            alignItems: \"left\",\n            justifyContent: \"left\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\",\n            flexFlow: \"row wrap\",\n            alignContent: \"flex-end\",\n          }}\n        >\n          {data.posts.map((post) => (\n            <Box\n              borderRadius=\"5px\"\n              border=\"1px solid grey\"\n              shadow=\" 1px 1px 1px grey\"\n              boxShadow=\"2px 2px 5px rgba(0,0,0,0.5)\"\n              p=\"20px\"\n              w=\"45%\"\n              h=\"45%\"\n              ml=\"3%\"\n              mb=\"40px\"\n              display=\"flex\"\n              justifyContent=\"center\"\n              position=\"relative\"\n              textAlign=\"center\"\n            >\n              <NextLink href=\"/:id\" as={`/post/${post.id}`}>\n                <Link _hover={{ textDecoration: \"none\" }}>\n                  <Image objectFit=\"cover\" size=\"150px\" src={post.thumbnail} style={{ maxWidth: \"100px\", height: \"auto !important\" }} alt=\"thumnail\" />\n                </Link>\n              </NextLink>\n              <NextLink href=\"/:id\" as={`/post/${post.id}`}>\n                <Link _hover={{ textDecoration: \"none\", }}>\n                  <Box display=\"\">\n                    <Text>{post.title}</Text>\n                  </Box>\n                </Link>\n              </NextLink>\n              {ME ? (\n                <EditDeleteButtons title={post.title} postId={parseInt(post.id)} />\n              ) : (\n                  'ã…¤'\n                )}\n            </Box>\n          ))}\n        </Box>\n      </Box>\n    </>\n  ) : (\n      <div>'ã…¤'</div>\n    )\n}\n\nexport default withApollo({ ssr: true })(Home)\n"]},"metadata":{},"sourceType":"module"}