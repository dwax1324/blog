{"ast":null,"code":"var __jsx = React.createElement;\nimport { Box, Button, Input, Text } from \"@chakra-ui/core\";\nimport React, { useRef } from \"react\";\nimport { useAddTagPostMutation, useCreateTagMutation, useDeleteTagMutation, useDeleteTagPostMutation, usePostsQuery, useTagsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport Router from \"next/router\";\n\nconst rel = () => {\n  var _posts$data, _posts$data$posts, _data$tags;\n\n  const {\n    data,\n    loading\n  } = useTagsQuery();\n  const posts = usePostsQuery();\n  const [add] = useAddTagPostMutation();\n  const [del] = useDeleteTagPostMutation();\n  const [create] = useCreateTagMutation();\n  const [deleteTag] = useDeleteTagMutation();\n  if (!data && !loading) return __jsx(\"div\", null, \"server error\");\n  const router = Router;\n  const postEl = useRef(null);\n  const tagEl = useRef(null);\n  const tagNameOrId = useRef(null);\n\n  const handleSubmitAdd = async () => {\n    // e.preventDefault();\n    const postId = parseInt(postEl.current.value);\n    const tagId = parseInt(tagEl.current.value);\n    console.log(postId, tagId);\n    const data = await add({\n      variables: {\n        tagId: tagId,\n        postId: postId\n      }\n    });\n    alert('연결 성공!');\n    router.reload();\n  };\n\n  const handleSubmitDelete = async () => {\n    // e.preventDefault();\n    const postId = parseInt(postEl.current.value);\n    const tagId = parseInt(tagEl.current.value);\n    console.log(postId, tagId);\n    await del({\n      variables: {\n        tagId: tagId,\n        postId: postId\n      }\n    });\n    alert('삭제 성공!');\n    router.reload();\n  };\n\n  const handleSubmitCreateTag = async () => {\n    const tagName = tagNameOrId.current.value;\n    create({\n      variables: {\n        text: tagName\n      }\n    });\n    alert('생성완료');\n  };\n\n  const handleSubmitDeleteTag = async () => {\n    const tagId = parseInt(tagNameOrId.current.value);\n    deleteTag({\n      variables: {\n        tagId: tagId\n      }\n    });\n    alert('삭제완료');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    w: \"100vw\",\n    h: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Box, null, \"Relations\"), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, \"POSTID\", __jsx(Input, {\n    name: \"postId\",\n    ref: postEl,\n    type: \"text\"\n  }), \"TAGID\", __jsx(Input, {\n    name: \"tagId\",\n    ref: tagEl,\n    type: \"text\"\n  }), __jsx(Button, {\n    variantColor: \"teal\",\n    onClick: handleSubmitAdd,\n    mt: \"50px\"\n  }, \"add!\"), __jsx(Button, {\n    variantColor: \"red\",\n    onClick: handleSubmitDelete,\n    mt: \"20px\"\n  }, \"delete!\")), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Box, null, posts === null || posts === void 0 ? void 0 : (_posts$data = posts.data) === null || _posts$data === void 0 ? void 0 : (_posts$data$posts = _posts$data.posts) === null || _posts$data$posts === void 0 ? void 0 : _posts$data$posts.map(t => {\n    var _t$tags;\n\n    return __jsx(Text, null, t.title, \"(id:\", t.id, \")[\", t === null || t === void 0 ? void 0 : (_t$tags = t.tags) === null || _t$tags === void 0 ? void 0 : _t$tags.map(t => t.text + ','), \"]\");\n  }))), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Box, null, data === null || data === void 0 ? void 0 : (_data$tags = data.tags) === null || _data$tags === void 0 ? void 0 : _data$tags.map(t => __jsx(Text, null, t.text, \"(id:\", t.id, \")\")))), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, \"CREATE TEXT/DELETE TAG ID\", __jsx(Input, {\n    name: \"tagId\",\n    ref: tagNameOrId,\n    type: \"text\"\n  }), __jsx(Button, {\n    variantColor: \"teal\",\n    onClick: handleSubmitCreateTag,\n    mt: \"50px\"\n  }, \"create!\"), __jsx(Button, {\n    variantColor: \"red\",\n    onClick: handleSubmitDeleteTag,\n    mt: \"20px\"\n  }, \"delete!\"))));\n};\n\nexport default withApollo({\n  ssr: true\n})(rel);","map":null,"metadata":{},"sourceType":"module"}