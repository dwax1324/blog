{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/develop/blog/client/pages/edit/[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useMeQuery } from \"../../generated/graphql\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport Rotuer from \"next/router\";\nimport { Box } from \"@chakra-ui/core\";\n\nvar PostPage = function PostPage(props) {\n  _s();\n\n  var _me$data, _data$post, _data$post2, _data$post3;\n\n  var me = useMeQuery();\n\n  var _useGetPostFromUrl = useGetPostFromUrl(),\n      data = _useGetPostFromUrl.data,\n      loading = _useGetPostFromUrl.loading;\n\n  var ME = me === null || me === void 0 ? void 0 : (_me$data = me.data) === null || _me$data === void 0 ? void 0 : _me$data.me;\n  var router = Rotuer;\n\n  var getBackToHome = function getBackToHome() {\n    router.push(\"/\");\n  };\n\n  return __jsx(React.Fragment, null, !ME ? \"\" : __jsx(React.Fragment, null, __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.id), __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$post2 = data.post) === null || _data$post2 === void 0 ? void 0 : _data$post2.title), __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, __jsx(ReactMarkdown, {\n    escapeHtml: false,\n    source: data === null || data === void 0 ? void 0 : (_data$post3 = data.post) === null || _data$post3 === void 0 ? void 0 : _data$post3.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }))))));\n};\n\n_s(PostPage, \"JE5zWlFvUfqq5n0ANPGTOhExrYA=\", false, function () {\n  return [useMeQuery, useGetPostFromUrl];\n});\n\n_c = PostPage;\nexport default withApollo({\n  ssr: true\n})(PostPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/home/develop/blog/client/pages/edit/[id].tsx"],"names":["React","useMeQuery","ReactMarkdown","useGetPostFromUrl","withApollo","Rotuer","Box","PostPage","props","me","data","loading","ME","router","getBackToHome","push","post","id","title","description","ssr"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAAyC,yBAAzC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAMA,IAAMC,QAAkC,GAAG,SAArCA,QAAqC,CAACC,KAAD,EAAW;AAAA;;AAAA;;AACpD,MAAMC,EAAE,GAAGR,UAAU,EAArB;;AADoD,2BAE1BE,iBAAiB,EAFS;AAAA,MAE5CO,IAF4C,sBAE5CA,IAF4C;AAAA,MAEtCC,OAFsC,sBAEtCA,OAFsC;;AAGpD,MAAMC,EAAE,GAAGH,EAAH,aAAGA,EAAH,mCAAGA,EAAE,CAAEC,IAAP,6CAAG,SAAUD,EAArB;AACA,MAAMI,MAAM,GAAGR,MAAf;;AAEA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BD,IAAAA,MAAM,CAACE,IAAP,CAAY,GAAZ;AACD,GAFD;;AAGA,SACE,4BACG,CAACH,EAAD,GACC,EADD,GAGC,4BACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,IAAN,aAAMA,IAAN,qCAAMA,IAAI,CAAEM,IAAZ,+CAAM,WAAYC,EAAlB,CADF,EAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMP,IAAN,aAAMA,IAAN,sCAAMA,IAAI,CAAEM,IAAZ,gDAAM,YAAYE,KAAlB,CAFF,EAGE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,UAAU,EAAE,KADd;AAEE,IAAA,MAAM,EAAER,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAEM,IAAR,gDAAE,YAAYG,WAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADF,CAFF,CAJJ,CADF;AAuBD,CAhCD;;GAAMZ,Q;UACON,U,EACeE,iB;;;KAFtBI,Q;AAkCN,eAAeH,UAAU,CAAC;AAAEgB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0Bb,QAA1B,CAAf","sourcesContent":["import React from \"react\";\nimport { useMeQuery, usePostQuery } from \"../../generated/graphql\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport Rotuer from \"next/router\";\nimport { Box } from \"@chakra-ui/core\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\ninterface postPagesProps<> {}\n\nconst PostPage: React.FC<postPagesProps> = (props) => {\n  const me = useMeQuery();\n  const { data, loading } = useGetPostFromUrl();\n  const ME = me?.data?.me;\n  const router = Rotuer;\n\n  const getBackToHome = () => {\n    router.push(\"/\");\n  };\n  return (\n    <>\n      {!ME ? (\n        \"\"\n      ) : (\n        <>\n          <Box />\n          <Box>\n            <Box>\n              <Box>{data?.post?.id}</Box>\n              <Box>{data?.post?.title}</Box>\n              <Box>\n                <ReactMarkdown\n                  escapeHtml={false}\n                  source={data?.post?.description}\n                ></ReactMarkdown>\n              </Box>\n            </Box>\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default withApollo({ ssr: true })(PostPage);\n"]},"metadata":{},"sourceType":"module"}