{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/newPost.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Button, Input, Textarea } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport Router from \"next/router\";\nimport React, { useRef, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { dark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport { useCreatePostMutation } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\n\nconst edit = () => {\n  const router = Router;\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: thumbnail,\n    1: setThumbnail\n  } = useState(\"\");\n  const {\n    0: mdState,\n    1: setMdState\n  } = useState(1);\n  const [createPost] = useCreatePostMutation();\n\n  const handleSubmit = async () => {\n    console.log(\"handlesubmit\");\n    await createPost({\n      variables: {\n        input: {\n          title: title,\n          description: description,\n          thumbnail\n        }\n      }\n    });\n    router.back();\n  };\n\n  const handleMd = () => {\n    if (mdState === 1) {\n      md.current.style.display = \"none\";\n      setMdState(0);\n    } else {\n      md.current.style.display = \"inline\";\n      setMdState(1);\n    }\n  };\n\n  const md = useRef(null);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mt: \"10vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    w: \"55%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      title: title,\n      description: description,\n      thumbnail: thumbnail\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    textAlign: \"center\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), __jsx(Input, {\n    textAlign: \"center\",\n    value: thumbnail,\n    onChange: e => setThumbnail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), __jsx(Textarea, {\n    h: \"100vh\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    ml: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"submit\"))), __jsx(Button, {\n    onClick: handleMd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"\\uD3BC\\uCE58\\uAE30\"), __jsx(Box, {\n    ref: md,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, __jsx(ReactMarkdown, {\n    source: description,\n    renderers: {\n      code: Component\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst Component = ({\n  value,\n  language\n}) => {\n  return __jsx(SyntaxHighlighter, {\n    language: language !== null && language !== void 0 ? language : null,\n    style: dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, value !== null && value !== void 0 ? value : \"\");\n};\n\nexport default withApollo({\n  ssr: false\n})(edit);","map":{"version":3,"sources":["/home/develop/blog/client/pages/newPost.tsx"],"names":["Box","Button","Input","Textarea","Form","Formik","Router","React","useRef","useState","ReactMarkdown","SyntaxHighlighter","dark","useCreatePostMutation","withApollo","edit","router","title","setTitle","description","setDescription","thumbnail","setThumbnail","mdState","setMdState","createPost","handleSubmit","console","log","variables","input","back","handleMd","md","current","style","display","e","target","value","code","Component","language","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Input, Textarea } from \"@chakra-ui/core\"\nimport { Form, Formik } from \"formik\"\nimport Router from \"next/router\"\nimport React, { useRef, useState } from \"react\"\nimport ReactMarkdown from \"react-markdown\"\nimport SyntaxHighlighter from \"react-syntax-highlighter\"\nimport { dark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\"\nimport { useCreatePostMutation } from \"../generated/graphql\"\nimport { withApollo } from \"../utils/withApollo\"\n\nconst edit: React.FC<{}> = () => {\n  const router = Router\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [thumbnail, setThumbnail] = useState(\"\")\n  const [mdState, setMdState] = useState(1)\n  const [createPost] = useCreatePostMutation()\n  const handleSubmit = async () => {\n    console.log(\"handlesubmit\")\n    await createPost({\n      variables: {\n        input: { title: title, description: description, thumbnail },\n      },\n    })\n    router.back()\n  }\n\n  const handleMd = () => {\n    if (mdState === 1) {\n      md.current.style.display = \"none\"\n      setMdState(0)\n    } else {\n      md.current.style.display = \"inline\"\n      setMdState(1)\n    }\n  }\n  const md = useRef(null)\n\n  return (\n    <>\n      <Box display=\"flex\" justifyContent=\"center\" mt=\"10vh\">\n        <Box w=\"55%\">\n          <Formik\n            initialValues={{\n              title: title,\n              description: description,\n              thumbnail: thumbnail\n            }}\n            onSubmit={handleSubmit}\n          >\n            <Form>\n              <Input\n                textAlign=\"center\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n              <Input\n                textAlign=\"center\"\n                value={thumbnail}\n                onChange={(e) => setThumbnail(e.target.value)}\n              />\n              <Textarea\n                h=\"100vh\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Textarea>\n              <Button type=\"submit\" ml=\"auto\">\n                submit\n              </Button>\n            </Form>\n          </Formik>\n          <Button onClick={handleMd}>펼치기</Button>\n          <Box ref={md}>\n            <ReactMarkdown\n              source={description}\n              renderers={{\n                code: Component,\n              }}\n            ></ReactMarkdown>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nconst Component = ({ value, language }) => {\n  return (\n    <SyntaxHighlighter language={language ?? null} style={dark}>\n      {value ?? \"\"}\n    </SyntaxHighlighter>\n  )\n}\n\nexport default withApollo({ ssr: false })(edit)\n"]},"metadata":{},"sourceType":"module"}