{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/rel.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Button, Input, Text } from \"@chakra-ui/core\";\nimport React, { useRef } from \"react\";\nimport { useAddTagPostMutation, useDeleteTagPostMutation, usePostsQuery, useTagsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport Router from \"next/router\";\n\nconst rel = () => {\n  var _posts$data, _posts$data$posts, _data$tags;\n\n  const {\n    data,\n    loading\n  } = useTagsQuery();\n  const posts = usePostsQuery();\n  const [add] = useAddTagPostMutation();\n  const [del] = useDeleteTagPostMutation();\n  if (!data && !loading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 35\n    }\n  }, \"server error\");\n  const router = Router;\n  const postEl = useRef(null);\n  const tagEl = useRef(null);\n\n  const handleSubmitAdd = async () => {\n    // e.preventDefault();\n    const postId = parseInt(postEl.current.value);\n    const tagId = parseInt(tagEl.current.value);\n    console.log(postId, tagId);\n    const data = await add({\n      variables: {\n        tagId: tagId,\n        postId: postId\n      }\n    });\n    alert('연결 성공!');\n    router.reload();\n  };\n\n  const handleSubmitDelete = async () => {\n    // e.preventDefault();\n    const postId = parseInt(postEl.current.value);\n    const tagId = parseInt(tagEl.current.value);\n    console.log(postId, tagId);\n    await del({\n      variables: {\n        tagId: tagId,\n        postId: postId\n      }\n    });\n    alert('삭제 성공!');\n    router.reload();\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    w: \"100vw\",\n    h: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"POSTID\", __jsx(Input, {\n    name: \"postId\",\n    ref: postEl,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }), \"TAGID\", __jsx(Input, {\n    name: \"tagId\",\n    ref: tagEl,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    variantColor: \"teal\",\n    onClick: handleSubmitAdd,\n    mt: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"add!\"), __jsx(Button, {\n    variantColor: \"red\",\n    onClick: handleSubmitDelete,\n    mt: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"delete!\")), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, posts === null || posts === void 0 ? void 0 : (_posts$data = posts.data) === null || _posts$data === void 0 ? void 0 : (_posts$data$posts = _posts$data.posts) === null || _posts$data$posts === void 0 ? void 0 : _posts$data$posts.map(t => {\n    var _t$tags;\n\n    return __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, t.title, \"(id:\", t.id, \")[\", t === null || t === void 0 ? void 0 : (_t$tags = t.tags) === null || _t$tags === void 0 ? void 0 : _t$tags.map(t => t.text + ','), \"]\");\n  }))), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$tags = data.tags) === null || _data$tags === void 0 ? void 0 : _data$tags.map(t => __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, t.text, \"(id:\", t.id, \")\")))), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"CREATE/DELETE TAG\", __jsx(Input, {\n    name: \"tagId\",\n    ref: tagEl,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    variantColor: \"teal\",\n    onClick: handleSubmitAdd,\n    mt: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"add!\"))));\n};\n\nexport default withApollo({\n  ssr: true\n})(rel);","map":{"version":3,"sources":["/home/develop/blog/client/pages/rel.tsx"],"names":["Box","Button","Input","Text","React","useRef","useAddTagPostMutation","useDeleteTagPostMutation","usePostsQuery","useTagsQuery","withApollo","Router","rel","data","loading","posts","add","del","router","postEl","tagEl","handleSubmitAdd","postId","parseInt","current","value","tagId","console","log","variables","alert","reload","handleSubmitDelete","map","t","title","id","tags","text","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Input, Text } from \"@chakra-ui/core\"\nimport React, { useEffect, useRef } from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport { useAddTagPostMutation, useDeleteTagMutation, useDeleteTagPostMutation, usePostsLazyQuery, usePostsQuery, useTagsQuery } from \"../generated/graphql\"\nimport { withApollo } from \"../utils/withApollo\"\nimport { Form, Formik } from \"formik\"\nimport Router from \"next/router\"\n\n\n\ninterface relProps { }\n\nconst rel: React.FC<{}> = () => {\n    const { data, loading } = useTagsQuery()\n    const posts = usePostsQuery()\n    const [add] = useAddTagPostMutation();\n    const [del] = useDeleteTagPostMutation();\n    if (!data && !loading) return <div>server error</div>\n\n    const router = Router;\n    const postEl = useRef(null)\n    const tagEl = useRef(null)\n\n    const handleSubmitAdd = async () => {\n        // e.preventDefault();\n        const postId = parseInt(postEl.current.value)\n        const tagId = parseInt(tagEl.current.value)\n        console.log(postId, tagId)\n        const data = await add({\n            variables: { tagId: tagId, postId: postId }\n        })\n        alert('연결 성공!')\n        router.reload();\n    }\n\n    const handleSubmitDelete = async () => {\n        // e.preventDefault();\n        const postId = parseInt(postEl.current.value)\n        const tagId = parseInt(tagEl.current.value)\n        console.log(postId, tagId)\n        await del({\n            variables: { tagId: tagId, postId: postId }\n        })\n        alert('삭제 성공!')\n        router.reload();\n    }\n    return (\n        <>\n\n            <Box w=\"100vw\" h=\"100vh\" display=\"flex\" justifyContent=\"center\" alignItems='center'>\n                <Box display=\"flex\" flexDirection=\"column\">\n                    POSTID\n                            <Input name=\"postId\" ref={postEl} type=\"text\" />\n                            TAGID\n                            <Input name=\"tagId\" ref={tagEl} type=\"text\" />\n\n                    <Button variantColor=\"teal\" onClick={handleSubmitAdd} mt=\"50px\">add!</Button>\n                    <Button variantColor=\"red\" onClick={handleSubmitDelete} mt=\"20px\">delete!</Button>\n                </Box>\n                <Box w=\"400px\" h=\"400px\" border=\"1px solid black\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Box>\n                        {posts?.data?.posts?.map((t) => (\n                            <Text>{t.title}(id:{t.id})[{t?.tags?.map((t) => t.text + ',')}]</Text>\n                        ))}\n                    </Box>\n                </Box>\n                <Box w=\"400px\" h=\"400px\" border=\"1px solid black\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Box>\n                        {data?.tags?.map((t) => (\n                            <Text>{t.text}(id:{t.id})</Text>\n                        ))}\n                    </Box>\n                </Box>\n                <Box display=\"flex\" flexDirection=\"column\">\n                    CREATE/DELETE TAG\n                            <Input name=\"tagId\" ref={tagEl} type=\"text\" />\n\n                    <Button variantColor=\"teal\" onClick={handleSubmitAdd} mt=\"50px\">add!</Button>\n                </Box>\n            </Box>\n\n        </>\n    )\n}\nexport default withApollo({ ssr: true })(rel)\n"]},"metadata":{},"sourceType":"module"}