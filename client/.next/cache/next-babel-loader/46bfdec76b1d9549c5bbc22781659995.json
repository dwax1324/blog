{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/rel.tsx\";\nvar __jsx = React.createElement;\nimport { Box, Text } from \"@chakra-ui/core\";\nimport React, { useRef } from \"react\";\nimport { useAddTagPostMutation, usePostsQuery, useTagsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { Form, Formik } from \"formik\";\nimport { Router } from \"next/router\";\n\nconst rel = () => {\n  var _posts$data, _posts$data$posts, _data$tags;\n\n  const {\n    data,\n    loading\n  } = useTagsQuery();\n  const posts = usePostsQuery();\n  if (!data && !loading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 35\n    }\n  }, \"server error\");\n  const router = Router;\n  const idEl = useRef(null);\n  const passwordEl = useRef(null);\n\n  let handleSubmit = async () => {\n    // e.preventDefault();\n    const id = idEl.current.value;\n    const password = passwordEl.current.value;\n    const data = await useAddTagPostMutation({\n      variables: {}\n    });\n    if (data.data.login) router.push(\"/\");else alert(\"authentication failed\");\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    w: \"100vw\",\n    h: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      id: \"\",\n      password: \"\"\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    name: \"id\",\n    ref: idEl,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }), __jsx(\"input\", {\n    name: \"password\",\n    ref: passwordEl,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"submit\"))), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, posts === null || posts === void 0 ? void 0 : (_posts$data = posts.data) === null || _posts$data === void 0 ? void 0 : (_posts$data$posts = _posts$data.posts) === null || _posts$data$posts === void 0 ? void 0 : _posts$data$posts.map(t => __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, t.title, \"(\", t.id, \")\")))), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$tags = data.tags) === null || _data$tags === void 0 ? void 0 : _data$tags.map(t => __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, t.text, \"(\", t.postsLength, \")\"))))));\n};\n\nexport default withApollo({\n  ssr: true\n})(rel);","map":{"version":3,"sources":["/home/develop/blog/client/pages/rel.tsx"],"names":["Box","Text","React","useRef","useAddTagPostMutation","usePostsQuery","useTagsQuery","withApollo","Form","Formik","Router","rel","data","loading","posts","router","idEl","passwordEl","handleSubmit","id","current","value","password","variables","login","push","alert","map","t","title","tags","text","postsLength","ssr"],"mappings":"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","sourcesContent":["import { Box, Text } from \"@chakra-ui/core\"\nimport React, { useEffect, useRef } from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport { useAddTagPostMutation, usePostsLazyQuery, usePostsQuery, useTagsQuery } from \"../generated/graphql\"\nimport { withApollo } from \"../utils/withApollo\"\nimport { Form, Formik } from \"formik\"\nimport { Router } from \"next/router\"\n\n\n\ninterface relProps { }\n\nconst rel: React.FC<{}> = () => {\n    const { data, loading } = useTagsQuery()\n    const posts = usePostsQuery()\n    if (!data && !loading) return <div>server error</div>\n\n    const router = Router\n    const idEl = useRef(null)\n    const passwordEl = useRef(null)\n\n    let handleSubmit = async () => {\n        // e.preventDefault();\n        const id = idEl.current.value\n        const password = passwordEl.current.value\n        const data = await useAddTagPostMutation({\n            variables: {}\n        })\n        if (data.data.login) router.push(\"/\")\n        else alert(\"authentication failed\")\n    }\n    return (\n        <>\n            <Box w=\"100vw\" h=\"100vh\" display=\"flex\" justifyContent=\"center\" alignItems='center'>\n                <Formik\n                    initialValues={{\n                        id: \"\",\n                        password: \"\",\n                    }}\n                    onSubmit={handleSubmit}\n                >\n                    <Form>\n                        <input name=\"id\" ref={idEl} type=\"text\" />\n                        <input name=\"password\" ref={passwordEl} type=\"password\" />\n                        <button type=\"submit\">submit</button>\n                    </Form>\n                </Formik>\n                <Box w=\"400px\" h=\"400px\" border=\"1px solid black\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Box>\n                        {posts?.data?.posts?.map((t) => (\n                            <Text>{t.title}({t.id})</Text>\n                        ))}\n                    </Box>\n                </Box>\n                <Box w=\"400px\" h=\"400px\" border=\"1px solid black\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Box>\n                        {data?.tags?.map((t) => (\n                            <Text>{t.text}({t.postsLength})</Text>\n                        ))}\n                    </Box>\n                </Box>\n            </Box>\n\n        </>\n    )\n}\nexport default withApollo({ ssr: true })(rel)\n"]},"metadata":{},"sourceType":"module"}