{"ast":null,"code":"var __jsx = React.createElement;\nimport { Box, Link, Text } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { useTagsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport NextLink from \"next/link\";\n\nvar tags = function tags() {\n  var _data$tags;\n\n  var _useTagsQuery = useTagsQuery(),\n      data = _useTagsQuery.data,\n      loading = _useTagsQuery.loading;\n\n  if (!data && !loading) return __jsx(\"div\", null, \"server error\");\n  var tags = data === null || data === void 0 ? void 0 : data.tags;\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    w: \"100vw\",\n    h: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Box, null, data === null || data === void 0 ? void 0 : (_data$tags = data.tags) === null || _data$tags === void 0 ? void 0 : _data$tags.map(function (t) {\n    return __jsx(NextLink, {\n      href: \"/:tagId\",\n      as: \"/tag/\".concat([t.id])\n    }, __jsx(Link, null, __jsx(Text, null, t.text, \"(\", t.postsLength, \")\")));\n  })))));\n};\n\nexport default withApollo({\n  ssr: true\n})(tags);","map":null,"metadata":{},"sourceType":"module"}