{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/develop/blog/client/pages/rel.tsx\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Button, Input, Text } from \"@chakra-ui/core\";\nimport React, { useRef } from \"react\";\nimport { useAddTagPostMutation, usePostsQuery, useTagsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { Form, Formik } from \"formik\";\nimport { Router } from \"next/router\";\n\nvar rel = function rel() {\n  _s2();\n\n  var _posts$data, _posts$data$posts, _data$tags;\n\n  var _useTagsQuery = useTagsQuery(),\n      data = _useTagsQuery.data,\n      loading = _useTagsQuery.loading;\n\n  var posts = usePostsQuery();\n  if (!data && !loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 35\n    }\n  }, \"server error\");\n  var router = Router;\n  var idEl = useRef(null);\n  var passwordEl = useRef(null);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _s = $RefreshSig$();\n\n    var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var id, password, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _s();\n\n              // e.preventDefault();\n              id = idEl.current.value;\n              password = passwordEl.current.value;\n              _context.next = 5;\n              return useAddTagPostMutation({\n                variables: {}\n              });\n\n            case 5:\n              data = _context.sent;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }), \"3/jNv9jVPZ7x/PqDuvRGwdcXD44=\", false, function () {\n      return [useAddTagPostMutation];\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    w: \"100vw\",\n    h: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      id: \"\",\n      password: \"\"\n    },\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, \"POSTID\", __jsx(Input, {\n    name: \"id\",\n    ref: idEl,\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }), \"TAGID\", __jsx(Input, {\n    name: \"password\",\n    ref: passwordEl,\n    type: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"submit\")))), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, posts === null || posts === void 0 ? void 0 : (_posts$data = posts.data) === null || _posts$data === void 0 ? void 0 : (_posts$data$posts = _posts$data.posts) === null || _posts$data$posts === void 0 ? void 0 : _posts$data$posts.map(function (t) {\n    var _t$tags;\n\n    return __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, t.title, \"(\", t.id, \")[\", t === null || t === void 0 ? void 0 : (_t$tags = t.tags) === null || _t$tags === void 0 ? void 0 : _t$tags.map(function (t) {\n      return t.text + ',';\n    }), \"]\");\n  }))), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$tags = data.tags) === null || _data$tags === void 0 ? void 0 : _data$tags.map(function (t) {\n    return __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, t.text, \"(\", t.id, \")\");\n  })))));\n};\n\n_s2(rel, \"B3PnGR1+IaYNdF8mKFTDPppSNBs=\", false, function () {\n  return [useTagsQuery, usePostsQuery];\n});\n\nexport default withApollo({\n  ssr: true\n})(rel);","map":{"version":3,"sources":["/home/develop/blog/client/pages/rel.tsx"],"names":["Box","Button","Input","Text","React","useRef","useAddTagPostMutation","usePostsQuery","useTagsQuery","withApollo","Form","Formik","Router","rel","data","loading","posts","router","idEl","passwordEl","handleSubmit","id","current","value","password","variables","map","t","title","tags","text","ssr"],"mappings":"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","sourcesContent":["import { Box, Button, Input, Text } from \"@chakra-ui/core\"\nimport React, { useEffect, useRef } from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport { useAddTagPostMutation, usePostsLazyQuery, usePostsQuery, useTagsQuery } from \"../generated/graphql\"\nimport { withApollo } from \"../utils/withApollo\"\nimport { Form, Formik } from \"formik\"\nimport { Router } from \"next/router\"\n\n\n\ninterface relProps { }\n\nconst rel: React.FC<{}> = () => {\n    const { data, loading } = useTagsQuery()\n    const posts = usePostsQuery()\n    if (!data && !loading) return <div>server error</div>\n\n    const router = Router\n    const idEl = useRef(null)\n    const passwordEl = useRef(null)\n\n    let handleSubmit = async () => {\n        // e.preventDefault();\n        const id = idEl.current.value\n        const password = passwordEl.current.value\n        const data = await useAddTagPostMutation({\n            variables: {}\n        })\n    }\n    return (\n        <>\n            <Box w=\"100vw\" h=\"100vh\" display=\"flex\" justifyContent=\"center\" alignItems='center'>\n                <Formik\n                    initialValues={{\n                        id: \"\",\n                        password: \"\",\n                    }}\n                    onSubmit={handleSubmit}\n                >\n                    <Form>\n                        <Box display=\"flex\" flexDirection=\"column\">\n                            POSTID\n                            <Input name=\"id\" ref={idEl} type=\"text\" />\n                            TAGID\n                            <Input name=\"password\" ref={passwordEl} type=\"password\" />\n                            <Button type=\"submit\">submit</Button>\n                        </Box>\n                    </Form>\n                </Formik>\n                <Box w=\"400px\" h=\"400px\" border=\"1px solid black\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Box>\n                        {posts?.data?.posts?.map((t) => (\n                            <Text>{t.title}({t.id})[{t?.tags?.map((t) => t.text + ',')}]</Text>\n                        ))}\n                    </Box>\n                </Box>\n                <Box w=\"400px\" h=\"400px\" border=\"1px solid black\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Box>\n                        {data?.tags?.map((t) => (\n                            <Text>{t.text}({t.id})</Text>\n                        ))}\n                    </Box>\n                </Box>\n            </Box>\n\n        </>\n    )\n}\nexport default withApollo({ ssr: true })(rel)\n"]},"metadata":{},"sourceType":"module"}