{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/develop/blog/client/pages/edit/[id].tsx\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { Box, Button, Input, Textarea } from \"@chakra-ui/core\";\nimport NavBar from \"../../components/NavBar\";\nimport ReactMarkdown from \"react-markdown\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { dark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport { useUpdatePostMutation } from \"../../generated/graphql\";\n\nvar edit = function edit() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var router = Router;\n\n  var _useGetPostFromUrl = useGetPostFromUrl(),\n      data = _useGetPostFromUrl.data;\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var handleSubmit = function handleSubmit() {\n    _s();\n\n    useUpdatePostMutation({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : data.post.id,\n        input: {\n          title: title,\n          description: description\n        }\n      }\n    });\n  };\n\n  _s(handleSubmit, \"PYtrg7l1T62w7LuaahPHi9I3+EQ=\", false, function () {\n    return [useUpdatePostMutation];\n  });\n\n  useEffect(function () {\n    if (data) {\n      setTitle(data.post.title);\n      setDescription(data.post.description);\n    }\n  }, [data]);\n  return __jsx(React.Fragment, null, __jsx(NavBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mt: \"10vh\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, !data ? \"\" : __jsx(Box, {\n    w: \"55%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      title: title\n    },\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    textAlign: \"center\",\n    value: title,\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), __jsx(Textarea, {\n    h: \"100vh\",\n    value: description,\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    ml: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"submit\"))), __jsx(ReactMarkdown, {\n    source: description,\n    renderers: {\n      code: Component\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s2(edit, \"JDauXUZmsyq3jrrOGe13LgVEFag=\", false, function () {\n  return [useGetPostFromUrl];\n});\n\nvar Component = function Component(_ref) {\n  var value = _ref.value,\n      language = _ref.language;\n  return __jsx(SyntaxHighlighter, {\n    language: language !== null && language !== void 0 ? language : null,\n    style: dark,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, value !== null && value !== void 0 ? value : \"\");\n};\n\n_c = Component;\nexport default withApollo({\n  ssr: false\n})(edit);\n\nvar _c;\n\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"sources":["/home/develop/blog/client/pages/edit/[id].tsx"],"names":["React","useEffect","useState","Router","withApollo","Formik","Form","useGetPostFromUrl","Box","Button","Input","Textarea","NavBar","ReactMarkdown","SyntaxHighlighter","dark","useUpdatePostMutation","edit","router","data","title","setTitle","description","setDescription","handleSubmit","variables","id","post","input","e","target","value","code","Component","language","ssr"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { Box, Button, Input, Textarea } from \"@chakra-ui/core\";\nimport NavBar from \"../../components/NavBar\";\nimport ReactMarkdown from \"react-markdown\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { dark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport { useUpdatePostMutation } from \"../../generated/graphql\";\n\nconst edit: React.FC<{}> = () => {\n  const router = Router;\n  const { data } = useGetPostFromUrl();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleSubmit = () => {\n    useUpdatePostMutation({\n      variables: {\n        id: data?.post.id,\n        input: { title: title, description: description },\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (data) {\n      setTitle(data.post.title);\n      setDescription(data.post.description);\n    }\n  }, [data]);\n  return (\n    <>\n      <NavBar />\n      <Box display=\"flex\" justifyContent=\"center\" mt=\"10vh\">\n        {!data ? (\n          \"\"\n        ) : (\n          <Box w=\"55%\">\n            <Formik\n              initialValues={{\n                title: title,\n              }}\n              onSubmit={handleSubmit}\n            >\n              <Form>\n                <Input\n                  textAlign=\"center\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n                <Textarea\n                  h=\"100vh\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                ></Textarea>\n                <Button ml=\"auto\">submit</Button>\n              </Form>\n            </Formik>\n            <ReactMarkdown\n              source={description}\n              renderers={{\n                code: Component,\n              }}\n            ></ReactMarkdown>\n          </Box>\n        )}\n      </Box>\n    </>\n  );\n};\n\nconst Component = ({ value, language }) => {\n  return (\n    <SyntaxHighlighter language={language ?? null} style={dark}>\n      {value ?? \"\"}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default withApollo({ ssr: false })(edit);\n"]},"metadata":{},"sourceType":"module"}