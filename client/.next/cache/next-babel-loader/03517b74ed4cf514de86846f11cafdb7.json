{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/develop/blog/client/pages/_app.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport \"../styles/globals.css\";\nimport { ThemeProvider, Button, Box } from \"@chakra-ui/core\";\nimport customTheme from \"../utils/theme\";\nimport React, { useRef, useState } from \"react\";\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(\"light\"),\n      dark = _useState[0],\n      setDark = _useState[1];\n\n  var color = useRef(null);\n\n  var handleColor = function handleColor() {\n    if (dark === \"light\") {\n      color.current.style.backgroundColor = \"#000\";\n      color.current.style.color = \"#fff\";\n    }\n  };\n\n  return __jsx(ThemeProvider, {\n    theme: customTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: handleColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \" color\"), __jsx(Box, {\n    ref: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s(MyApp, \"ePBw8ZEm7+O2Bx5dKNPJ+H4cdxw=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/develop/blog/client/pages/_app.tsx"],"names":["ThemeProvider","Button","Box","customTheme","React","useRef","useState","MyApp","Component","pageProps","dark","setDark","color","handleColor","current","style","backgroundColor"],"mappings":";;;;;;AAAA,OAAO,uBAAP;AACA,SACEA,aADF,EAIEC,MAJF,EAKEC,GALF,QAMO,iBANP;AAOA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACfH,QAAQ,CAAC,OAAD,CADO;AAAA,MAChCI,IADgC;AAAA,MAC1BC,OAD0B;;AAEvC,MAAMC,KAAK,GAAGP,MAAM,CAAC,IAAD,CAApB;;AAEA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIH,IAAI,KAAK,OAAb,EAAsB;AACpBE,MAAAA,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACAJ,MAAAA,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBH,KAApB,GAA4B,MAA5B;AACD;AACF,GALD;;AAMA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAET,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEU,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,GAAD;AAAK,IAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF;AAQD;;GAlBQF,K;;KAAAA,K;AAoBT,eAAeA,KAAf","sourcesContent":["import \"../styles/globals.css\"\nimport {\n  ThemeProvider,\n  ColorModeProvider,\n  useColorMode,\n  Button,\n  Box,\n} from \"@chakra-ui/core\"\nimport customTheme from \"../utils/theme\"\nimport React, { useRef, useState } from \"react\"\n\nfunction MyApp({ Component, pageProps }) {\n  const [dark, setDark] = useState(\"light\")\n  const color = useRef(null)\n\n  const handleColor = () => {\n    if (dark === \"light\") {\n      color.current.style.backgroundColor = \"#000\"\n      color.current.style.color = \"#fff\"\n    }\n  }\n  return (\n    <ThemeProvider theme={customTheme}>\n      <Button onClick={handleColor}> color</Button>\n      <Box ref={color}>\n        <Component {...pageProps} />\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}