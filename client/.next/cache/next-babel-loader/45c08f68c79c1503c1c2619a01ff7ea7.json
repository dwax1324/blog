{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/tag/[id].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useMeQuery, useTagQuery } from \"../../generated/graphql\";\nimport NextLink from \"next/link\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Box, Text, Image, Link } from \"@chakra-ui/core\";\nimport EditDeleteButtons from \"../../components/EditDeleteButtons\";\nimport { useGetIntId } from '../../utils/useGetIntId';\n\nconst Home = () => {\n  var _me$data;\n\n  const id = useGetIntId();\n  const {\n    data,\n    loading\n  } = useTagQuery({\n    variables: {\n      id: id\n    }\n  });\n  const me = useMeQuery();\n\n  if (!loading && !data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    }, \"sorry, somthing happend\");\n  }\n\n  const ME = (_me$data = me.data) === null || _me$data === void 0 ? void 0 : _me$data.me;\n  return data.tag.posts ? __jsx(React.Fragment, null, __jsx(_JSXStyle, {\n    id: \"3184585384\",\n    __self: this\n  }, \"@media screen and (max-width:768px){.index-image{width:90% !important;}.index-card{width:100% !important;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RldmVsb3AvYmxvZy9jbGllbnQvcGFnZXMvdGFnL1tpZF0udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJCK0IsQUFLb0MsQUFHRixxQkFGdkIsQ0FHQSIsImZpbGUiOiIvaG9tZS9kZXZlbG9wL2Jsb2cvY2xpZW50L3BhZ2VzL3RhZy9baWRdLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgdXNlTWVRdWVyeSwgdXNlUG9zdHNRdWVyeSwgdXNlVGFnUXVlcnksIHVzZVRhZ3NRdWVyeSB9IGZyb20gXCIuLi8uLi9nZW5lcmF0ZWQvZ3JhcGhxbFwiXG5pbXBvcnQgTmV4dExpbmsgZnJvbSBcIm5leHQvbGlua1wiXG5pbXBvcnQgeyB3aXRoQXBvbGxvIH0gZnJvbSBcIi4uLy4uL3V0aWxzL3dpdGhBcG9sbG9cIlxuaW1wb3J0IHsgQm94LCBUZXh0LCBJbWFnZSwgTGluayB9IGZyb20gXCJAY2hha3JhLXVpL2NvcmVcIlxuaW1wb3J0IEVkaXREZWxldGVCdXR0b25zIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL0VkaXREZWxldGVCdXR0b25zXCJcbmltcG9ydCB7IHVzZUdldEludElkIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXNlR2V0SW50SWQnXG5cbmludGVyZmFjZSBob21lUHJvcHMgeyB9XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVxdWVzdEluZm8ge1xuICAgIGRhdGE6IHN0cmluZ1xufVxuXG5jb25zdCBIb21lOiBSZWFjdC5GQzx7fT4gPSAoKSA9PiB7XG4gICAgY29uc3QgaWQgPSB1c2VHZXRJbnRJZCgpXG4gICAgY29uc3QgeyBkYXRhLCBsb2FkaW5nIH0gPSB1c2VUYWdRdWVyeSh7XG4gICAgICAgIHZhcmlhYmxlczogeyBpZDogaWQgfVxuICAgIH0pXG4gICAgY29uc3QgbWUgPSB1c2VNZVF1ZXJ5KClcblxuICAgIGlmICghbG9hZGluZyAmJiAhZGF0YSkge1xuICAgICAgICByZXR1cm4gPGRpdj5zb3JyeSwgc29tdGhpbmcgaGFwcGVuZDwvZGl2PlxuICAgIH1cbiAgICBjb25zdCBNRSA9IG1lLmRhdGE/Lm1lXG4gICAgcmV0dXJuIGRhdGEudGFnLnBvc3RzID8gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcblxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkgeyBcbiAgICAgICAgICAuaW5kZXgtaW1hZ2V7XG4gICAgICAgICAgICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbiAgICAgICAgICB9XG4gICAgICAgICAgLmluZGV4LWNhcmR7XG4gICAgICAgICAgICB3aWR0aDoxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgICAgICAgICA8Qm94XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiaW5kZXgtY29udGFpbmVyXCJcbiAgICAgICAgICAgICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxJbWFnZSBjbGFzc05hbWU9XCJpbmRleC1pbWFnZVwiIHNyYz1cIi9tYWluLmpwZ1wiIHc9XCI3NSVcIiBoPVwiNzUlXCIgbXQ9XCI1MHB4XCIgbWI9XCI1MHB4XCIgbWF4Vz1cIjEwMDBweFwiIC8+XG4gICAgICAgICAgICAgICAgPEJveFxuICAgICAgICAgICAgICAgICAgICB3PVwiNzUlXCJcbiAgICAgICAgICAgICAgICAgICAgaD1cImF1dG9cIlxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiBcImxlZnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhXcmFwOiBcIndyYXBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhGbG93OiBcInJvdyB3cmFwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhbGlnbkNvbnRlbnQ6IFwiZmxleC1lbmRcIixcblxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgeyFkYXRhID8gXCJcIiA6IChkYXRhLnRhZy5wb3N0cy5tYXAoKHBvc3QpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxCb3hcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJpbmRleC1jYXJkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM9XCI1cHhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcj1cIjFweCBzb2xpZCBncmV5XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGFkb3c9XCIgMXB4IDFweCAxcHggZ3JleVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm94U2hhZG93PVwiMnB4IDJweCA1cHggcmdiYSgwLDAsMCwwLjUpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwPVwiMjBweFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdz1cIjQ1JVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaD1cIjU1JVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWw9XCIzJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWI9XCI0MHB4XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uPVwicmVsYXRpdmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHRBbGlnbj1cImNlbnRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4V2lkdGg9XCI1NTBweFwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPE5leHRMaW5rIGhyZWY9XCIvOmlkXCIgYXM9e2AvcG9zdC8ke3Bvc3QuaWR9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMaW5rID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJbWFnZSBvYmplY3RGaXQ9XCJjb3ZlclwiIHNyYz17cG9zdC50aHVtYm5haWx9IHN0eWxlPXt7IGJvcmRlclJhZGl1czogXCI1MCVcIiwgbWF4V2lkdGg6IFwiMTAwcHhcIiwgaGVpZ2h0OiBcIjEwMHB4XCIgfX0gYWx0PVwidGh1bW5haWxcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJveCBjbGFzc05hbWU9XCJlZGl0VGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dD57cG9zdC50aXRsZX08L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvTmV4dExpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJveCBjdXJzb3I9XCJwb2ludGVyXCIgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dD57cG9zdC5jcmVhdGVkQXQuc2xpY2UoMCwgMTApfTwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0JveD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Qm94IHc9XCI4MCVcIiBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiIGRpc3BsYXk9XCJmbGV4XCIgZmxleFdyYXA9XCJ3cmFwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshcG9zdC50YWdzID8gXCIgXCIgOiAocG9zdC50YWdzLm1hcCgodCkgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxOZXh0TGluayBocmVmPVwiLzppZFwiIGFzPXtgL3RhZy8ke3QuaWR9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCb3ggdGV4dEFsaWduPVwiY2VudGVyXCIgYm9yZGVyPVwiMXB4IHNvbGlkICMzMzNcIiBib3JkZXJSYWRpdXM9XCI1cHhcIiBtPVwiNXB4XCIgcD1cIjVweFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3QudGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9OZXh0TGluaz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7TUUgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFZGl0RGVsZXRlQnV0dG9ucyB0aXRsZT17cG9zdC50aXRsZX0gcG9zdElkPXtwYXJzZUludChwb3N0LmlkKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgICAgICAgICApKSl9XG4gICAgICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgICA8L0JveD5cbiAgICAgICAgPC8+XG4gICAgKSA6IChcbiAgICAgICAgICAgIDxkaXY+PC9kaXY+XG4gICAgICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgd2l0aEFwb2xsbyh7IHNzcjogdHJ1ZSB9KShIb21lKVxuIl19 */\\n/*@ sourceURL=/home/develop/blog/client/pages/tag/[id].tsx */\"), __jsx(Box, {\n    className: \"index-container\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    className: \"index-image\",\n    src: \"/main.jpg\",\n    w: \"75%\",\n    h: \"75%\",\n    mt: \"50px\",\n    mb: \"50px\",\n    maxW: \"1000px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), __jsx(Box, {\n    w: \"75%\",\n    h: \"auto\",\n    style: {\n      display: \"flex\",\n      alignItems: \"left\",\n      justifyContent: \"center\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      flexFlow: \"row wrap\",\n      alignContent: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, !data ? \"\" : data.tag.posts.map(post => __jsx(Box, {\n    className: \"index-card\",\n    borderRadius: \"5px\",\n    border: \"1px solid grey\",\n    shadow: \" 1px 1px 1px grey\",\n    boxShadow: \"2px 2px 5px rgba(0,0,0,0.5)\",\n    p: \"20px\",\n    w: \"45%\",\n    h: \"55%\",\n    ml: \"3%\",\n    mb: \"40px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    textAlign: \"center\",\n    maxWidth: \"550px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, __jsx(NextLink, {\n    href: \"/:id\",\n    as: `/post/${post.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, __jsx(Image, {\n    objectFit: \"cover\",\n    src: post.thumbnail,\n    style: {\n      borderRadius: \"50%\",\n      maxWidth: \"100px\",\n      height: \"100px\"\n    },\n    alt: \"thumnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }), __jsx(Box, {\n    className: \"editTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 41\n    }\n  }, post.title)))), __jsx(Box, {\n    cursor: \"pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, post.createdAt.slice(0, 10))), __jsx(Box, {\n    w: \"80%\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, !post.tags ? \" \" : post.tags.map(t => __jsx(NextLink, {\n    href: \"/:id\",\n    as: `/tag/${t.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, __jsx(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }, __jsx(Box, {\n    textAlign: \"center\",\n    border: \"1px solid #333\",\n    borderRadius: \"5px\",\n    m: \"5px\",\n    p: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 45\n    }\n  }, t.text))))), ME ? __jsx(EditDeleteButtons, {\n    title: post.title,\n    postId: parseInt(post.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }) : ''))))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  });\n};\n\nexport default withApollo({\n  ssr: true\n})(Home);","map":{"version":3,"sources":["/home/develop/blog/client/pages/tag/[id].tsx"],"names":["React","useMeQuery","useTagQuery","NextLink","withApollo","Box","Text","Image","Link","EditDeleteButtons","useGetIntId","Home","id","data","loading","variables","me","ME","tag","posts","display","alignItems","justifyContent","flexDirection","flexWrap","flexFlow","alignContent","map","post","thumbnail","borderRadius","maxWidth","height","title","createdAt","slice","tags","t","text","parseInt","ssr"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useMeQuery, usePostsQuery, useTagQuery, useTagsQuery } from \"../../generated/graphql\"\nimport NextLink from \"next/link\"\nimport { withApollo } from \"../../utils/withApollo\"\nimport { Box, Text, Image, Link } from \"@chakra-ui/core\"\nimport EditDeleteButtons from \"../../components/EditDeleteButtons\"\nimport { useGetIntId } from '../../utils/useGetIntId'\n\ninterface homeProps { }\n\nexport interface RequestInfo {\n    data: string\n}\n\nconst Home: React.FC<{}> = () => {\n    const id = useGetIntId()\n    const { data, loading } = useTagQuery({\n        variables: { id: id }\n    })\n    const me = useMeQuery()\n\n    if (!loading && !data) {\n        return <div>sorry, somthing happend</div>\n    }\n    const ME = me.data?.me\n    return data.tag.posts ? (\n        <>\n            <style jsx global>{`\n\n        @media screen and (max-width: 768px) { \n          .index-image{\n              width: 90% !important;\n          }\n          .index-card{\n            width:100% !important;\n          }\n        }\n      `}</style>\n            <Box\n                className=\"index-container\"\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n            >\n                <Image className=\"index-image\" src=\"/main.jpg\" w=\"75%\" h=\"75%\" mt=\"50px\" mb=\"50px\" maxW=\"1000px\" />\n                <Box\n                    w=\"75%\"\n                    h=\"auto\"\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"left\",\n                        justifyContent: \"center\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        flexFlow: \"row wrap\",\n                        alignContent: \"flex-end\",\n\n                    }}\n                >\n                    {!data ? \"\" : (data.tag.posts.map((post) => (\n                        <Box\n                            className=\"index-card\"\n                            borderRadius=\"5px\"\n                            border=\"1px solid grey\"\n                            shadow=\" 1px 1px 1px grey\"\n                            boxShadow=\"2px 2px 5px rgba(0,0,0,0.5)\"\n                            p=\"20px\"\n                            w=\"45%\"\n                            h=\"55%\"\n                            ml=\"3%\"\n                            mb=\"40px\"\n                            display=\"flex\"\n                            justifyContent=\"center\"\n                            flexDirection=\"column\"\n                            position=\"relative\"\n                            textAlign=\"center\"\n                            maxWidth=\"550px\"\n                        >\n                            <NextLink href=\"/:id\" as={`/post/${post.id}`}>\n                                <Link >\n                                    <Image objectFit=\"cover\" src={post.thumbnail} style={{ borderRadius: \"50%\", maxWidth: \"100px\", height: \"100px\" }} alt=\"thumnail\" />\n                                    <Box className=\"editTitle\">\n                                        <Text>{post.title}</Text>\n                                    </Box>\n                                </Link>\n                            </NextLink>\n                            <Box cursor=\"pointer\" >\n                                <Text>{post.createdAt.slice(0, 10)}</Text>\n                            </Box>\n                            <Box w=\"80%\" justifyContent=\"center\" display=\"flex\" flexWrap=\"wrap\">\n                                {!post.tags ? \" \" : (post.tags.map((t) =>\n                                    <NextLink href=\"/:id\" as={`/tag/${t.id}`}>\n                                        <Link>\n                                            <Box textAlign=\"center\" border=\"1px solid #333\" borderRadius=\"5px\" m=\"5px\" p=\"5px\">\n                                                {t.text}\n                                            </Box>\n                                        </Link>\n                                    </NextLink>\n                                )\n                                )}\n                            </Box>\n\n\n                            {ME ? (\n                                <EditDeleteButtons title={post.title} postId={parseInt(post.id)} />\n                            ) : (\n                                    ''\n                                )}\n                        </Box>\n                    )))}\n                </Box>\n            </Box>\n        </>\n    ) : (\n            <div></div>\n        )\n}\n\nexport default withApollo({ ssr: true })(Home)\n"]},"metadata":{},"sourceType":"module"}