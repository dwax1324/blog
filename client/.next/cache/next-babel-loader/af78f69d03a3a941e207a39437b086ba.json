{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/develop/blog/client/pages/_app.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport \"../styles/globals.css\";\nimport { ThemeProvider, ColorModeProvider, useColorMode, Button } from \"@chakra-ui/core\";\nimport customTheme from \"../utils/theme\";\nimport React from \"react\";\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  return __jsx(ThemeProvider, {\n    theme: customTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(ColorModeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: toggleColorMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Toggle \", colorMode === \"Light\" ? \"Dark\" : \"Light\"), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s(MyApp, \"uURyIwMgIfFLStF4nJMrxbb6o/4=\", false, function () {\n  return [useColorMode];\n});\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/home/develop/blog/client/pages/_app.tsx"],"names":["ThemeProvider","ColorModeProvider","useColorMode","Button","customTheme","React","MyApp","Component","pageProps","colorMode","toggleColorMode"],"mappings":";;;;;;AAAA,OAAO,uBAAP;AACA,SACEA,aADF,EAEEC,iBAFF,EAGEC,YAHF,EAIEC,MAJF,QAKO,iBALP;AAMA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,sBACAN,YAAY,EADZ;AAAA,MAC/BO,SAD+B,iBAC/BA,SAD+B;AAAA,MACpBC,eADoB,iBACpBA,eADoB;;AAEvC,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEN,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUD,SAAS,KAAK,OAAd,GAAwB,MAAxB,GAAiC,OAD3C,CADF,EAIE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,CADF,CADF;AAUD;;GAZQF,K;UACgCJ,Y;;;KADhCI,K;AAcT,eAAeA,KAAf","sourcesContent":["import \"../styles/globals.css\"\nimport {\n  ThemeProvider,\n  ColorModeProvider,\n  useColorMode,\n  Button,\n} from \"@chakra-ui/core\"\nimport customTheme from \"../utils/theme\"\nimport React from \"react\"\n\nfunction MyApp({ Component, pageProps }) {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <ThemeProvider theme={customTheme}>\n      <ColorModeProvider>\n        <Button onClick={toggleColorMode}>\n          Toggle {colorMode === \"Light\" ? \"Dark\" : \"Light\"}\n        </Button>\n        <Component {...pageProps} />\n      </ColorModeProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}