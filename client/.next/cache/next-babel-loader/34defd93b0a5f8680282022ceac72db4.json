{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport { Box, Button, Input, Textarea } from \"@chakra-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport Router from \"next/router\";\nimport React, { useRef, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { dark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport { useCreatePostMutation } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar edit = function edit() {\n  var router = Router;\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      thumbnail = _useState3[0],\n      setThumbnail = _useState3[1];\n\n  var _useState4 = useState(1),\n      mdState = _useState4[0],\n      setMdState = _useState4[1];\n\n  var _useCreatePostMutatio = useCreatePostMutation(),\n      _useCreatePostMutatio2 = _slicedToArray(_useCreatePostMutatio, 1),\n      createPost = _useCreatePostMutatio2[0];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"handlesubmit\");\n              _context.next = 3;\n              return createPost({\n                variables: {\n                  input: {\n                    title: title,\n                    description: description,\n                    thumbnail: thumbnail\n                  }\n                }\n              });\n\n            case 3:\n              router.back();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleMd = function handleMd() {\n    if (mdState === 1) {\n      md.current.style.display = \"none\";\n      setMdState(0);\n    } else {\n      md.current.style.display = \"inline\";\n      setMdState(1);\n    }\n  };\n\n  var md = useRef(null);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mt: \"10vh\"\n  }, __jsx(Box, {\n    w: \"55%\"\n  }, __jsx(Formik, {\n    initialValues: {\n      title: title,\n      description: description,\n      thumbnail: thumbnail\n    },\n    onSubmit: handleSubmit\n  }, __jsx(Form, null, __jsx(Input, {\n    textAlign: \"center\",\n    value: title,\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    }\n  }), __jsx(Input, {\n    textAlign: \"center\",\n    value: thumbnail,\n    onChange: function onChange(e) {\n      return setThumbnail(e.target.value);\n    }\n  }), __jsx(Textarea, {\n    h: \"100vh\",\n    value: description,\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    ml: \"auto\"\n  }, \"submit\"))), __jsx(Button, {\n    onClick: handleMd\n  }, \"\\uD3BC\\uCE58\\uAE30\"), __jsx(Box, {\n    ref: md\n  }, __jsx(ReactMarkdown, {\n    source: description,\n    renderers: {\n      code: Component\n    }\n  })))));\n};\n\nvar Component = function Component(_ref2) {\n  var value = _ref2.value,\n      language = _ref2.language;\n  return __jsx(SyntaxHighlighter, {\n    language: language !== null && language !== void 0 ? language : null,\n    style: dark\n  }, value !== null && value !== void 0 ? value : \"\");\n};\n\nexport default withApollo({\n  ssr: false\n})(edit);","map":null,"metadata":{},"sourceType":"module"}