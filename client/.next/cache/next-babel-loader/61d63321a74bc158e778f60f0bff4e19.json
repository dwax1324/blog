{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/admin.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport { MeDocument, useLoginMutation } from \"../generated/graphql\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\n\nconst admin = () => {\n  const router = Router;\n  const [login] = useLoginMutation();\n  const idEl = useRef(null);\n  const passwordEl = useRef(null);\n\n  let handleSubmit = () => {\n    // e.preventDefault();\n    const id = idEl.current.value;\n    const password = passwordEl.current.value;\n    console.log(login({\n      variables: {\n        id: id,\n        password: password\n      }\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Formik, {\n    initialValues: {\n      id: \"\",\n      password: \"\"\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      const response = await login({\n        variables: values,\n        update: (cache, {\n          data\n        }) => {\n          cache.writeQuery({\n            query: MeDocument,\n            data: {\n              __typename: \"Query\",\n              me: data === null || data === void 0 ? void 0 : data.login\n            }\n          }); // cache.evict({ fieldName: \"posts:{}\" });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    name: \"id\",\n    ref: idEl,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    name: \"password\",\n    ref: passwordEl,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"submit\"))));\n};\n\nexport default withApollo({\n  ssr: true\n})(admin);","map":{"version":3,"sources":["/home/develop/blog/client/pages/admin.tsx"],"names":["React","useRef","MeDocument","useLoginMutation","Router","withApollo","Formik","Form","admin","router","login","idEl","passwordEl","handleSubmit","id","current","value","password","console","log","variables","values","setErrors","response","update","cache","data","writeQuery","query","__typename","me","ssr"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAGEC,UAHF,EAKEC,gBALF,QAMO,sBANP;AAOA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;;AAEA,MAAMC,KAAmB,GAAG,MAAM;AAChC,QAAMC,MAAM,GAAGL,MAAf;AACA,QAAM,CAACM,KAAD,IAAUP,gBAAgB,EAAhC;AACA,QAAMQ,IAAI,GAAGV,MAAM,CAAC,IAAD,CAAnB;AACA,QAAMW,UAAU,GAAGX,MAAM,CAAC,IAAD,CAAzB;;AAEA,MAAIY,YAAY,GAAG,MAAM;AACvB;AACA,UAAMC,EAAE,GAAGH,IAAI,CAACI,OAAL,CAAaC,KAAxB;AACA,UAAMC,QAAQ,GAAGL,UAAU,CAACG,OAAX,CAAmBC,KAApC;AACAE,IAAAA,OAAO,CAACC,GAAR,CACET,KAAK,CAAC;AACJU,MAAAA,SAAS,EAAE;AAAEN,QAAAA,EAAE,EAAEA,EAAN;AAAUG,QAAAA,QAAQ,EAAEA;AAApB;AADP,KAAD,CADP;AAKD,GATD;;AAUA,SACE,4BACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbH,MAAAA,EAAE,EAAE,EADS;AAEbG,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,QAAQ,EAAE,OAAOI,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AACzC,YAAMC,QAAQ,GAAG,MAAMb,KAAK,CAAC;AAC3BU,QAAAA,SAAS,EAAEC,MADgB;AAE3BG,QAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,UAAAA;AAAF,SAAR,KAAqB;AAC3BD,UAAAA,KAAK,CAACE,UAAN,CAA0B;AACxBC,YAAAA,KAAK,EAAE1B,UADiB;AAExBwB,YAAAA,IAAI,EAAE;AACJG,cAAAA,UAAU,EAAE,OADR;AAEJC,cAAAA,EAAE,EAAEJ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEhB;AAFN;AAFkB,WAA1B,EAD2B,CAQ3B;AACD;AAX0B,OAAD,CAA5B;AAaD,KAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,GAAG,EAAEC,IAAtB;AAA4B,IAAA,IAAI,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEC,UAA5B;AAAwC,IAAA,IAAI,EAAC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CArBF,CADF,CADF;AAiCD,CAjDD;;AAmDA,eAAeR,UAAU,CAAC;AAAE0B,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BvB,KAA1B,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport {\n  LoginDocument,\n  LoginMutation,\n  MeDocument,\n  MeQuery,\n  useLoginMutation,\n} from \"../generated/graphql\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\n\nconst admin: React.FC<{}> = () => {\n  const router = Router;\n  const [login] = useLoginMutation();\n  const idEl = useRef(null);\n  const passwordEl = useRef(null);\n\n  let handleSubmit = () => {\n    // e.preventDefault();\n    const id = idEl.current.value;\n    const password = passwordEl.current.value;\n    console.log(\n      login({\n        variables: { id: id, password: password },\n      })\n    );\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{\n          id: \"\",\n          password: \"\",\n        }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login({\n            variables: values,\n            update: (cache, { data }) => {\n              cache.writeQuery<MeQuery>({\n                query: MeDocument,\n                data: {\n                  __typename: \"Query\",\n                  me: data?.login,\n                },\n              });\n              // cache.evict({ fieldName: \"posts:{}\" });\n            },\n          });\n        }}\n      >\n        <Form>\n          <input name=\"id\" ref={idEl} type=\"text\" />\n          <input name=\"password\" ref={passwordEl} type=\"password\" />\n          <button type=\"submit\" onSubmit={handleSubmit}>\n            submit\n          </button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default withApollo({ ssr: true })(admin);\n"]},"metadata":{},"sourceType":"module"}