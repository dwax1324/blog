{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/tag/[id].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useMeQuery, useTagQuery } from \"../../generated/graphql\";\nimport NextLink from \"next/link\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Box, Text, Link } from \"@chakra-ui/core\";\nimport EditDeleteButtons from \"../../components/EditDeleteButtons\";\nimport { useGetIntId } from '../../utils/useGetIntId';\n\nconst Home = () => {\n  var _me$data, _data$tag, _data$tag$posts;\n\n  const id = useGetIntId();\n  const {\n    data,\n    loading\n  } = useTagQuery({\n    variables: {\n      id: id\n    }\n  });\n  const me = useMeQuery(); // if (!loading && !data) {\n  //     return <div>sorry, somthing happend</div>\n  // }\n\n  setInterval(() => {\n    console.log(data);\n  }, 1000);\n  const ME = (_me$data = me.data) === null || _me$data === void 0 ? void 0 : _me$data.me;\n  return data ? __jsx(React.Fragment, null, __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    w: \"75%\",\n    style: {\n      display: \"flex\",\n      alignItems: \"left\",\n      justifyContent: \"left\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      flexFlow: \"row wrap\",\n      alignContent: \"flex-end\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$tag = data.tag) === null || _data$tag === void 0 ? void 0 : (_data$tag$posts = _data$tag.posts) === null || _data$tag$posts === void 0 ? void 0 : _data$tag$posts.map(t => __jsx(Box, {\n    borderRadius: \"5px\",\n    border: \"1px solid grey\",\n    shadow: \" 1px 1px 1px grey\",\n    boxShadow: \"2px 2px 5px rgba(0,0,0,0.5)\",\n    p: \"20px\",\n    w: \"30%\",\n    ml: \"3%\",\n    mb: \"40px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, __jsx(NextLink, {\n    href: \"/:id\",\n    as: `/post/${t.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    _hover: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }, t.title))), ME ? __jsx(EditDeleteButtons, {\n    title: t.title,\n    postId: parseInt(t.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }) : \"\"))))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  });\n};\n\nexport default withApollo({\n  ssr: true\n})(Home);","map":{"version":3,"sources":["/home/develop/blog/client/pages/tag/[id].tsx"],"names":["React","useMeQuery","useTagQuery","NextLink","withApollo","Box","Text","Link","EditDeleteButtons","useGetIntId","Home","id","data","loading","variables","me","setInterval","console","log","ME","display","alignItems","justifyContent","flexDirection","flexWrap","flexFlow","alignContent","tag","posts","map","t","textDecoration","title","parseInt","ssr"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useMeQuery, usePostsQuery, useTagQuery, useTagsQuery } from \"../../generated/graphql\"\nimport NextLink from \"next/link\"\nimport { withApollo } from \"../../utils/withApollo\"\nimport { Box, Text, Image, Link } from \"@chakra-ui/core\"\nimport EditDeleteButtons from \"../../components/EditDeleteButtons\"\nimport { useGetIntId } from '../../utils/useGetIntId'\n\ninterface homeProps { }\n\nexport interface RequestInfo {\n    data: string\n}\n\nconst Home: React.FC<{}> = () => {\n    const id = useGetIntId()\n    const { data, loading } = useTagQuery({\n        variables: { id: id }\n    })\n    const me = useMeQuery()\n\n    // if (!loading && !data) {\n    //     return <div>sorry, somthing happend</div>\n    // }\n    setInterval(() => {\n\n        console.log(data)\n    }, 1000)\n    const ME = me.data?.me\n    return data ? (\n        <>\n            <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n            >\n                <Box\n                    w=\"75%\"\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"left\",\n                        justifyContent: \"left\",\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        flexFlow: \"row wrap\",\n                        alignContent: \"flex-end\",\n                    }}\n                >\n                    {data?.tag?.posts?.map((t) => (\n                        <Box\n                            borderRadius=\"5px\"\n                            border=\"1px solid grey\"\n                            shadow=\" 1px 1px 1px grey\"\n                            boxShadow=\"2px 2px 5px rgba(0,0,0,0.5)\"\n                            p=\"20px\"\n                            w=\"30%\"\n                            ml=\"3%\"\n                            mb=\"40px\"\n                            display=\"flex\"\n                            justifyContent=\"center\"\n                            position=\"relative\"\n                            textAlign=\"center\"\n                        >\n                            <NextLink href=\"/:id\" as={`/post/${t.id}`}>\n                                <Link _hover={{ textDecoration: \"none\" }}>\n                                    <Text>{t.title}</Text>\n                                </Link>\n                            </NextLink>\n                            {/* <Box position=\"absolute\" ml=\"9%\">\n                {post.createdAt}\n              </Box> */}\n                            {ME ? (\n                                <EditDeleteButtons title={t.title} postId={parseInt(t.id)} />\n                            ) : (\n                                    \"\"\n                                )}\n                        </Box>\n                    ))}\n                </Box>\n            </Box>\n        </>\n    ) : (\n            <div></div>\n        )\n}\n\nexport default withApollo({ ssr: true })(Home)\n"]},"metadata":{},"sourceType":"module"}