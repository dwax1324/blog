{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport { Box, Button, Input, Text } from \"@chakra-ui/core\";\nimport React, { useRef } from \"react\";\nimport { useAddTagPostMutation, useCreateTagMutation, useDeleteTagMutation, useDeleteTagPostMutation, usePostsQuery, useTagsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\nimport Router from \"next/router\";\n\nvar rel = function rel() {\n  var _posts$data, _posts$data$posts, _data$tags;\n\n  var _useTagsQuery = useTagsQuery(),\n      data = _useTagsQuery.data,\n      loading = _useTagsQuery.loading;\n\n  var posts = usePostsQuery();\n\n  var _useAddTagPostMutatio = useAddTagPostMutation(),\n      _useAddTagPostMutatio2 = _slicedToArray(_useAddTagPostMutatio, 1),\n      add = _useAddTagPostMutatio2[0];\n\n  var _useDeleteTagPostMuta = useDeleteTagPostMutation(),\n      _useDeleteTagPostMuta2 = _slicedToArray(_useDeleteTagPostMuta, 1),\n      del = _useDeleteTagPostMuta2[0];\n\n  var _useCreateTagMutation = useCreateTagMutation(),\n      _useCreateTagMutation2 = _slicedToArray(_useCreateTagMutation, 1),\n      create = _useCreateTagMutation2[0];\n\n  var _useDeleteTagMutation = useDeleteTagMutation(),\n      _useDeleteTagMutation2 = _slicedToArray(_useDeleteTagMutation, 1),\n      deleteTag = _useDeleteTagMutation2[0];\n\n  if (!data && !loading) return __jsx(\"div\", null, \"server error\");\n  var router = Router;\n  var postEl = useRef(null);\n  var tagEl = useRef(null);\n  var tagNameOrId = useRef(null);\n\n  var handleSubmitAdd = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var postId, tagId, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // e.preventDefault();\n              postId = parseInt(postEl.current.value);\n              tagId = parseInt(tagEl.current.value);\n              console.log(postId, tagId);\n              _context.next = 5;\n              return add({\n                variables: {\n                  tagId: tagId,\n                  postId: postId\n                }\n              });\n\n            case 5:\n              data = _context.sent;\n              alert('연결 성공!');\n              router.reload();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmitAdd() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmitDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var postId, tagId;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // e.preventDefault();\n              postId = parseInt(postEl.current.value);\n              tagId = parseInt(tagEl.current.value);\n              console.log(postId, tagId);\n              _context2.next = 5;\n              return del({\n                variables: {\n                  tagId: tagId,\n                  postId: postId\n                }\n              });\n\n            case 5:\n              alert('삭제 성공!');\n              router.reload();\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmitDelete() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmitCreateTag = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var tagName;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              tagName = tagNameOrId.current.value;\n              create({\n                variables: {\n                  text: tagName\n                }\n              });\n              alert('생성완료');\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleSubmitCreateTag() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmitDeleteTag = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var tagId;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              tagId = parseInt(tagNameOrId.current.value);\n              deleteTag({\n                variables: {\n                  tagId: tagId\n                }\n              });\n              alert('삭제완료');\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleSubmitDeleteTag() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    w: \"100vw\",\n    h: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Box, null, \"Relations\"), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, \"POSTID\", __jsx(Input, {\n    name: \"postId\",\n    ref: postEl,\n    type: \"text\"\n  }), \"TAGID\", __jsx(Input, {\n    name: \"tagId\",\n    ref: tagEl,\n    type: \"text\"\n  }), __jsx(Button, {\n    variantColor: \"teal\",\n    onClick: handleSubmitAdd,\n    mt: \"50px\"\n  }, \"add!\"), __jsx(Button, {\n    variantColor: \"red\",\n    onClick: handleSubmitDelete,\n    mt: \"20px\"\n  }, \"delete!\")), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Box, null, posts === null || posts === void 0 ? void 0 : (_posts$data = posts.data) === null || _posts$data === void 0 ? void 0 : (_posts$data$posts = _posts$data.posts) === null || _posts$data$posts === void 0 ? void 0 : _posts$data$posts.map(function (t) {\n    var _t$tags;\n\n    return __jsx(Text, null, t.title, \"(id:\", t.id, \")[\", t === null || t === void 0 ? void 0 : (_t$tags = t.tags) === null || _t$tags === void 0 ? void 0 : _t$tags.map(function (t) {\n      return t.text + ',';\n    }), \"]\");\n  }))), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Box, null, data === null || data === void 0 ? void 0 : (_data$tags = data.tags) === null || _data$tags === void 0 ? void 0 : _data$tags.map(function (t) {\n    return __jsx(Text, null, t.text, \"(id:\", t.id, \")\");\n  }))), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, \"CREATE TEXT/DELETE TAG ID\", __jsx(Input, {\n    name: \"tagId\",\n    ref: tagNameOrId,\n    type: \"text\"\n  }), __jsx(Button, {\n    variantColor: \"teal\",\n    onClick: handleSubmitCreateTag,\n    mt: \"50px\"\n  }, \"create!\"), __jsx(Button, {\n    variantColor: \"red\",\n    onClick: handleSubmitDeleteTag,\n    mt: \"20px\"\n  }, \"delete!\"))));\n};\n\nexport default withApollo({\n  ssr: true\n})(rel);","map":null,"metadata":{},"sourceType":"module"}