{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport \"../styles/globals.css\";\nimport { ThemeProvider, Button, Box } from \"@chakra-ui/core\";\nimport customTheme from \"../utils/theme\";\nimport React, { useEffect, useRef } from \"react\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  // const [dark, setDark] = useState(\"light\")\n  const color = useRef(null);\n  useEffect(() => {\n    if (localStorage.getItem(\"sid\") === null) {\n      localStorage.setItem(\"sid\", \"light\");\n    } else if (localStorage.getItem(\"sid\") === \"dark\") {\n      const val = localStorage.getItem(\"sid\");\n      localStorage.setItem(\"sid\", \"dark\");\n      color.current.style.backgroundColor = \"#000\";\n      color.current.style.color = \"#aaa\";\n    }\n  }, []);\n\n  const handleColor = () => {\n    const localItem = localStorage.getItem(\"sid\");\n\n    if (localItem === \"light\") {\n      color.current.style.backgroundColor = \"#000\";\n      document.body.style.backgroundColor = \"#000\";\n      color.current.style.color = \"#eee\";\n      localStorage.setItem(\"sid\", \"dark\");\n    } else {\n      color.current.style.backgroundColor = \"#fff\";\n      document.body.style.backgroundColor = \"#fff\";\n      color.current.style.color = \"#000\";\n      localStorage.setItem(\"sid\", \"light\");\n    }\n  };\n\n  return __jsx(ThemeProvider, {\n    theme: customTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    variantColor: \"black\",\n    onClick: handleColor,\n    position: \"fixed\",\n    right: \"5px\",\n    top: \"80%\",\n    w: \"50px\",\n    h: \"50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"color\"), __jsx(Box, {\n    ref: color,\n    transition: \".2s\",\n    minHeight: \"100vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/develop/blog/client/pages/_app.tsx"],"names":["ThemeProvider","Button","Box","customTheme","React","useEffect","useRef","MyApp","Component","pageProps","color","localStorage","getItem","setItem","val","current","style","backgroundColor","handleColor","localItem","document","body"],"mappings":";;;;;AAAA,OAAO,uBAAP;AACA,SACEA,aADF,EAIEC,MAJF,EAKEC,GALF,QAMO,iBANP;AAOA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAmD,OAAnD;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC;AACA,QAAMC,KAAK,GAAGJ,MAAM,CAAC,IAAD,CAApB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAY,CAACC,OAAb,CAAqB,KAArB,MAAgC,IAApC,EAA0C;AACxCD,MAAAA,YAAY,CAACE,OAAb,CAAqB,KAArB,EAA4B,OAA5B;AACD,KAFD,MAEO,IAAIF,YAAY,CAACC,OAAb,CAAqB,KAArB,MAAgC,MAApC,EAA4C;AACjD,YAAME,GAAG,GAAGH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;AACAD,MAAAA,YAAY,CAACE,OAAb,CAAqB,KAArB,EAA4B,MAA5B;AACAH,MAAAA,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACAP,MAAAA,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAoBN,KAApB,GAA4B,MAA5B;AACD;AACF,GATQ,EASN,EATM,CAAT;;AAWA,QAAMQ,WAAW,GAAG,MAAM;AACxB,UAAMC,SAAS,GAAGR,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAlB;;AACA,QAAIO,SAAS,KAAK,OAAlB,EAA2B;AACzBT,MAAAA,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAcL,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACAP,MAAAA,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAoBN,KAApB,GAA4B,MAA5B;AACAC,MAAAA,YAAY,CAACE,OAAb,CAAqB,KAArB,EAA4B,MAA5B;AACD,KALD,MAKO;AACLH,MAAAA,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACAG,MAAAA,QAAQ,CAACC,IAAT,CAAcL,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACAP,MAAAA,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAoBN,KAApB,GAA4B,MAA5B;AACAC,MAAAA,YAAY,CAACE,OAAb,CAAqB,KAArB,EAA4B,OAA5B;AACD;AACF,GAbD;;AAcA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEV,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,YAAY,EAAC,OADf;AAEE,IAAA,OAAO,EAAEe,WAFX;AAGE,IAAA,QAAQ,EAAC,OAHX;AAIE,IAAA,KAAK,EAAC,KAJR;AAKE,IAAA,GAAG,EAAC,KALN;AAME,IAAA,CAAC,EAAC,MANJ;AAOE,IAAA,CAAC,EAAC,MAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAYE,MAAC,GAAD;AAAK,IAAA,GAAG,EAAER,KAAV;AAAiB,IAAA,UAAU,EAAC,KAA5B;AAAkC,IAAA,SAAS,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAZF,CADF;AAkBD;;AAED,eAAeF,KAAf","sourcesContent":["import \"../styles/globals.css\"\nimport {\n  ThemeProvider,\n  ColorModeProvider,\n  useColorMode,\n  Button,\n  Box,\n} from \"@chakra-ui/core\"\nimport customTheme from \"../utils/theme\"\nimport React, { useEffect, useRef, useState } from \"react\"\n\nfunction MyApp({ Component, pageProps }) {\n  // const [dark, setDark] = useState(\"light\")\n  const color = useRef(null)\n\n  useEffect(() => {\n    if (localStorage.getItem(\"sid\") === null) {\n      localStorage.setItem(\"sid\", \"light\")\n    } else if (localStorage.getItem(\"sid\") === \"dark\") {\n      const val = localStorage.getItem(\"sid\")\n      localStorage.setItem(\"sid\", \"dark\")\n      color.current.style.backgroundColor = \"#000\"\n      color.current.style.color = \"#aaa\"\n    }\n  }, [])\n\n  const handleColor = () => {\n    const localItem = localStorage.getItem(\"sid\")\n    if (localItem === \"light\") {\n      color.current.style.backgroundColor = \"#000\"\n      document.body.style.backgroundColor = \"#000\"\n      color.current.style.color = \"#eee\"\n      localStorage.setItem(\"sid\", \"dark\")\n    } else {\n      color.current.style.backgroundColor = \"#fff\"\n      document.body.style.backgroundColor = \"#fff\"\n      color.current.style.color = \"#000\"\n      localStorage.setItem(\"sid\", \"light\")\n    }\n  }\n  return (\n    <ThemeProvider theme={customTheme}>\n      <Button\n        variantColor=\"black\"\n        onClick={handleColor}\n        position=\"fixed\"\n        right=\"5px\"\n        top=\"80%\"\n        w=\"50px\"\n        h=\"50px\"\n      >\n        color\n      </Button>\n      <Box ref={color} transition=\".2s\" minHeight=\"100vh\">\n        <Component {...pageProps} />\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}