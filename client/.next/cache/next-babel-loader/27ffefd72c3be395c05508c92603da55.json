{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/develop/blog/client/pages/tags.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { useTagsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar tags = function tags() {\n  _s();\n\n  var _useTagsQuery = useTagsQuery(),\n      data = _useTagsQuery.data,\n      loading = _useTagsQuery.loading;\n\n  if (!data && !loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 33\n    }\n  }, \"server error\");\n  var tags = data === null || data === void 0 ? void 0 : data.tags; // useEffect(() => {\n  // tags =\n  // }, [data?.tags])\n\n  console.log(tags);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    w: \"100vw\",\n    h: \"100vh\",\n    backgroundColor: \"red\",\n    fontSize: \"50px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(tags, \"parm2OxVq+T6G6q74OL/C66Rjm8=\", false, function () {\n  return [useTagsQuery];\n});\n\nexport default withApollo({\n  ssr: true\n})(tags);","map":{"version":3,"sources":["/home/develop/blog/client/pages/tags.tsx"],"names":["Box","React","useTagsQuery","withApollo","tags","data","loading","console","log","ssr"],"mappings":";;;;;AAAA,SAASA,GAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAiC,OAAjC;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAIA,IAAMC,IAAkB,GAAG,gBAAM;AAAA;;AAAA,sBACLF,YAAY,EADP;AAAA,MACvBG,IADuB,iBACvBA,IADuB;AAAA,MACjBC,OADiB,iBACjBA,OADiB;;AAE/B,MAAI,CAACD,IAAD,IAAS,CAACC,OAAd,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAEvB,MAAIF,IAAI,GAAGC,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAED,IAAjB,CAJ+B,CAK/B;AACA;AACA;;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,CAAC,EAAC,OAAP;AAAe,IAAA,CAAC,EAAC,OAAjB;AAAyB,IAAA,eAAe,EAAC,KAAzC;AAA+C,IAAA,QAAQ,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CAxBD;;GAAMA,I;UACsBF,Y;;;AAwB5B,eAAeC,UAAU,CAAC;AAAEM,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BL,IAA1B,CAAf","sourcesContent":["import { Box, Text } from \"@chakra-ui/core\"\nimport React, { useEffect } from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport { useTagsQuery } from \"../generated/graphql\"\nimport { withApollo } from \"../utils/withApollo\"\n\ninterface tagsProps { }\n\nconst tags: React.FC<{}> = () => {\n  const { data, loading } = useTagsQuery()\n  if (!data && !loading) return <div>server error</div>\n\n  let tags = data?.tags\n  // useEffect(() => {\n  // tags =\n  // }, [data?.tags])\n\n  console.log(tags)\n  return (\n    <>\n      <Box w=\"100vw\" h=\"100vh\" backgroundColor=\"red\" fontSize=\"50px\">\n        {/* {data?.tags?.map((t) => {\n          <>\n            <Box position=\"absolute\" top=\"45%\" left=\"45%\" w=\"50px\" h=\"50px\" border=\"1px solid red\">\n              <Text fontSize=\"100px\" color=\"red\">{t.text}</Text>\n            </Box>\n          </>\n        })} */}\n      </Box>\n\n    </>\n  )\n}\nexport default withApollo({ ssr: true })(tags)\n"]},"metadata":{},"sourceType":"module"}