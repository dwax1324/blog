{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/edit/[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery } from \"../../generated/graphql\";\nimport { Box, Button, Input } from \"@chakra-ui/core\";\n\nconst edit = () => {\n  const router = Router;\n\n  const handleSubmit = () => {};\n\n  const intId = useGetIntId();\n  const {\n    data,\n    loading\n  } = usePostQuery({\n    skip: intId === -1,\n    variables: {\n      id: intId\n    }\n  });\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n\n  if (loading) {\n    return __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  if (!(data === null || data === void 0 ? void 0 : data.post)) {\n    return __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, \"cout not find post\");\n  }\n\n  return __jsx(React.Fragment, null, !data ? \"\" : __jsx(Formik, {\n    initialValues: {\n      title: data.post.title\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    value: title,\n    onChange: e => {\n      console.log(e.target.value);\n      setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"submit\"))));\n};\n\nexport default withApollo({\n  ssr: false\n})(edit);","map":{"version":3,"sources":["/home/develop/blog/client/pages/edit/[id].tsx"],"names":["React","useState","Router","withApollo","Formik","Form","usePostQuery","Box","Button","Input","edit","router","handleSubmit","intId","useGetIntId","data","loading","skip","variables","id","title","setTitle","post","e","console","log","target","value","ssr"],"mappings":";;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,YAAT,QAAoD,yBAApD;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,iBAAnC;;AACA,MAAMC,IAAkB,GAAG,MAAM;AAC/B,QAAMC,MAAM,GAAGT,MAAf;;AACA,QAAMU,YAAY,GAAG,MAAM,CAAE,CAA7B;;AACA,QAAMC,KAAK,GAAGC,WAAW,EAAzB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBV,YAAY,CAAC;AACrCW,IAAAA,IAAI,EAAEJ,KAAK,KAAK,CAAC,CADoB;AAErCK,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEN;AADK;AAF0B,GAAD,CAAtC;AAMA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBpB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,MAAIe,OAAJ,EAAa;AACX,WAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,MAAI,EAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,IAAP,CAAJ,EAAiB;AACf,WAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AACD,SACE,4BACG,CAACP,IAAD,GACC,EADD,GAGC,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbK,MAAAA,KAAK,EAAEL,IAAI,CAACO,IAAL,CAAUF;AADJ,KADjB;AAIE,IAAA,QAAQ,EAAER,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEQ,KADT;AAEE,IAAA,QAAQ,EAAGG,CAAD,IAAO;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAN,MAAAA,QAAQ,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CANF,CAJJ,CADF;AAyBD,CA3CD;;AA6CA,eAAexB,UAAU,CAAC;AAAEyB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2BlB,IAA3B,CAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery, useUpdatePostMutation } from \"../../generated/graphql\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { Box, Button, Input } from \"@chakra-ui/core\";\nconst edit: React.FC<{}> = () => {\n  const router = Router;\n  const handleSubmit = () => {};\n  const intId = useGetIntId();\n  const { data, loading } = usePostQuery({\n    skip: intId === -1,\n    variables: {\n      id: intId,\n    },\n  });\n  const [title, setTitle] = useState(\"\");\n\n  if (loading) {\n    return <Box>loading...</Box>;\n  }\n  if (!data?.post) {\n    return <Box>cout not find post</Box>;\n  }\n  return (\n    <>\n      {!data ? (\n        \"\"\n      ) : (\n        <Formik\n          initialValues={{\n            title: data.post.title,\n          }}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <Input\n              value={title}\n              onChange={(e) => {\n                console.log(e.target.value);\n                setTitle(e.target.value);\n              }}\n            />\n            <Button>submit</Button>\n          </Form>\n        </Formik>\n      )}\n    </>\n  );\n};\n\nexport default withApollo({ ssr: false })(edit);\n"]},"metadata":{},"sourceType":"module"}