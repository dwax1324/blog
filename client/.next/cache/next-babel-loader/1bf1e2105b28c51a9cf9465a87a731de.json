{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useMeQuery, useTagQuery } from \"../../generated/graphql\";\nimport NextLink from \"next/link\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Box, Text, Link } from \"@chakra-ui/core\";\nimport EditDeleteButtons from \"../../components/EditDeleteButtons\";\nimport { useGetIntId } from '../../utils/useGetIntId';\n\nconst Home = () => {\n  var _me$data, _data$tag, _data$tag2, _data$tag2$posts;\n\n  const id = useGetIntId();\n  const {\n    data,\n    loading\n  } = useTagQuery({\n    variables: {\n      id: id\n    }\n  });\n  const me = useMeQuery();\n\n  if (!loading && !data) {\n    return __jsx(\"div\", null, \"sorry, somthing happend\");\n  }\n\n  const ME = (_me$data = me.data) === null || _me$data === void 0 ? void 0 : _me$data.me;\n  return data ? __jsx(Box, {\n    h: \"100vh\"\n  }, __jsx(Box, {\n    w: \"100vw\",\n    h: \"50vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, __jsx(Text, {\n    fontSize: \"40px\"\n  }, data === null || data === void 0 ? void 0 : (_data$tag = data.tag) === null || _data$tag === void 0 ? void 0 : _data$tag.text)), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  }, __jsx(Box, {\n    w: \"75%\",\n    style: {\n      display: \"flex\",\n      alignItems: \"left\",\n      justifyContent: \"left\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      flexFlow: \"row wrap\",\n      alignContent: \"flex-end\"\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$tag2 = data.tag) === null || _data$tag2 === void 0 ? void 0 : (_data$tag2$posts = _data$tag2.posts) === null || _data$tag2$posts === void 0 ? void 0 : _data$tag2$posts.map(t => __jsx(Box, {\n    borderRadius: \"5px\",\n    border: \"1px solid grey\",\n    shadow: \" 1px 1px 1px grey\",\n    boxShadow: \"2px 2px 5px rgba(0,0,0,0.5)\",\n    p: \"20px\",\n    w: \"30%\",\n    ml: \"3%\",\n    mb: \"40px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    textAlign: \"center\"\n  }, __jsx(NextLink, {\n    href: \"/:id\",\n    as: `/post/${t.id}`\n  }, __jsx(Link, {\n    _hover: {\n      textDecoration: \"none\"\n    }\n  }, __jsx(Text, null, t.title))), ME ? __jsx(EditDeleteButtons, {\n    title: t.title,\n    postId: parseInt(t.id)\n  }) : \"\"))))) : __jsx(\"div\", null);\n};\n\nexport default withApollo({\n  ssr: true\n})(Home);","map":null,"metadata":{},"sourceType":"module"}