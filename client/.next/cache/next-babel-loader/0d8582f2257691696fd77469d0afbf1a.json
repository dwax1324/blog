{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/develop/blog/client/pages/edit/[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { Button, Input } from \"@chakra-ui/core\";\n\nvar edit = function edit() {\n  _s();\n\n  var router = Router;\n\n  var handleSubmit = function handleSubmit() {};\n\n  var _useGetPostFromUrl = useGetPostFromUrl(),\n      data = _useGetPostFromUrl.data;\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return setTitle(data === null || data === void 0 ? void 0 : data.post.title);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), 1000);\n  return __jsx(React.Fragment, null, !data ? \"\" : __jsx(Formik, {\n    initialValues: {\n      title: title\n    },\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    value: title,\n    onChange: function onChange(e) {\n      console.log(e.target.value);\n      setTitle(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"submit\"))));\n};\n\n_s(edit, \"7nCW19i1+/9eAtNILYDEPOiqNys=\", false, function () {\n  return [useGetPostFromUrl];\n});\n\nexport default withApollo({\n  ssr: false\n})(edit);","map":{"version":3,"sources":["/home/develop/blog/client/pages/edit/[id].tsx"],"names":["React","useState","Router","withApollo","Formik","Form","useGetPostFromUrl","Button","Input","edit","router","handleSubmit","data","title","setTitle","setTimeout","post","e","console","log","target","value","ssr"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;;AACA,IAAMC,IAAkB,GAAG,SAArBA,IAAqB,GAAM;AAAA;;AAC/B,MAAMC,MAAM,GAAGR,MAAf;;AACA,MAAMS,YAAY,GAAG,SAAfA,YAAe,GAAM,CAAE,CAA7B;;AAF+B,2BAGdL,iBAAiB,EAHH;AAAA,MAGvBM,IAHuB,sBAGvBA,IAHuB;;AAAA,kBAILX,QAAQ,CAAC,EAAD,CAJH;AAAA,MAIxBY,KAJwB;AAAA,MAIjBC,QAJiB;;AAM/BC,EAAAA,UAAU,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHD,QAAQ,CAACF,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,IAAN,CAAWH,KAAZ,CADL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAEP,IAFO,CAAV;AAGA,SACE,4BACG,CAACD,IAAD,GACC,EADD,GAGC,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,KAAK,EAAEA;AADM,KADjB;AAIE,IAAA,QAAQ,EAAEF,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,QAAQ,EAAE,kBAACI,CAAD,EAAO;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAP,MAAAA,QAAQ,CAACG,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CANF,CAJJ,CADF;AAyBD,CAlCD;;GAAMZ,I;UAGaH,iB;;;AAiCnB,eAAeH,UAAU,CAAC;AAAEmB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2Bb,IAA3B,CAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery, useUpdatePostMutation } from \"../../generated/graphql\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { Button, Input } from \"@chakra-ui/core\";\nconst edit: React.FC<{}> = () => {\n  const router = Router;\n  const handleSubmit = () => {};\n  const { data } = useGetPostFromUrl();\n  const [title, setTitle] = useState(\"\");\n\n  setTimeout(async () => {\n    await setTitle(data?.post.title);\n  }, 1000);\n  return (\n    <>\n      {!data ? (\n        \"\"\n      ) : (\n        <Formik\n          initialValues={{\n            title: title,\n          }}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <Input\n              value={title}\n              onChange={(e) => {\n                console.log(e.target.value);\n                setTitle(e.target.value);\n              }}\n            />\n            <Button>submit</Button>\n          </Form>\n        </Formik>\n      )}\n    </>\n  );\n};\n\nexport default withApollo({ ssr: false })(edit);\n"]},"metadata":{},"sourceType":"module"}