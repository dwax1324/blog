{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/edit/[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery } from \"../../generated/graphql\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\n\nconst edit = () => {\n  var _data$post;\n\n  const router = Router;\n  const {\n    data,\n    loading\n  } = useGetPostFromUrl();\n  if (!data && !loading) return 0;\n  if (data && loading) return 0;\n  const post = usePostQuery({\n    variables: {\n      id: data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.id\n    }\n  });\n  const idEl = useRef(null);\n  const passwordEl = useRef(null);\n  const title = data.post.title;\n  const description = data.post.description;\n\n  let handleSubmit = async () => {\n    // e.preventDefault();\n    const id = idEl.current.value;\n    const password = passwordEl.current.value;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Formik, {\n    initialValues: {\n      id: \"\",\n      password: \"\"\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    name: \"id\",\n    ref: idEl,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    name: \"password\",\n    ref: passwordEl,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"submit\"))));\n};\n\nexport default withApollo({\n  ssr: false\n})(edit);","map":{"version":3,"sources":["/home/develop/blog/client/pages/edit/[id].tsx"],"names":["React","useRef","Router","withApollo","Formik","Form","usePostQuery","useGetPostFromUrl","edit","router","data","loading","post","variables","id","idEl","passwordEl","title","description","handleSubmit","current","value","password","ssr"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,YAAT,QAAoD,yBAApD;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,IAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,MAAM,GAAGP,MAAf;AACA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,iBAAiB,EAA3C;AAEA,MAAI,CAACG,IAAD,IAAS,CAACC,OAAd,EAAuB,OAAO,CAAP;AACvB,MAAID,IAAI,IAAIC,OAAZ,EAAqB,OAAO,CAAP;AAErB,QAAMC,IAAI,GAAGN,YAAY,CAAC;AACxBO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEJ,IAAF,aAAEA,IAAF,qCAAEA,IAAI,CAAEE,IAAR,+CAAE,WAAYE;AAAlB;AADa,GAAD,CAAzB;AAGA,QAAMC,IAAI,GAAGd,MAAM,CAAC,IAAD,CAAnB;AACA,QAAMe,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMgB,KAAK,GAAGP,IAAI,CAACE,IAAL,CAAUK,KAAxB;AACA,QAAMC,WAAW,GAAGR,IAAI,CAACE,IAAL,CAAUM,WAA9B;;AACA,MAAIC,YAAY,GAAG,YAAY;AAC7B;AACA,UAAML,EAAE,GAAGC,IAAI,CAACK,OAAL,CAAaC,KAAxB;AACA,UAAMC,QAAQ,GAAGN,UAAU,CAACI,OAAX,CAAmBC,KAApC;AACD,GAJD;;AAKA,SACE,4BACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbP,MAAAA,EAAE,EAAE,EADS;AAEbQ,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,QAAQ,EAAEH,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,GAAG,EAAEJ,IAAtB;AAA4B,IAAA,IAAI,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEC,UAA5B;AAAwC,IAAA,IAAI,EAAC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAPF,CADF,CADF;AAiBD,CApCD;;AAsCA,eAAeb,UAAU,CAAC;AAAEoB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2Bf,IAA3B,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery, useUpdatePostMutation } from \"../../generated/graphql\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { promises } from \"fs\";\nconst edit: React.FC<{}> = () => {\n  const router = Router;\n  const { data, loading } = useGetPostFromUrl();\n\n  if (!data && !loading) return 0;\n  if (data && loading) return 0;\n\n  const post = usePostQuery({\n    variables: { id: data?.post?.id },\n  });\n  const idEl = useRef(null);\n  const passwordEl = useRef(null);\n  const title = data.post.title;\n  const description = data.post.description;\n  let handleSubmit = async () => {\n    // e.preventDefault();\n    const id = idEl.current.value;\n    const password = passwordEl.current.value;\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{\n          id: \"\",\n          password: \"\",\n        }}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <input name=\"id\" ref={idEl} type=\"text\" />\n          <input name=\"password\" ref={passwordEl} type=\"password\" />\n          <button type=\"submit\">submit</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default withApollo({ ssr: false })(edit);\n"]},"metadata":{},"sourceType":"module"}