{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport \"../styles/globals.css\";\nimport { ThemeProvider, Button, Box } from \"@chakra-ui/core\";\nimport customTheme from \"../utils/theme\";\nimport React, { useRef, useState } from \"react\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: dark,\n    1: setDark\n  } = useState(\"light\");\n  const color = useRef(null);\n\n  const handleColor = () => {\n    if (dark === \"light\") {\n      color.current.style.backgroundColor = \"#000\";\n      color.current.style.color = \"#fff\";\n      setDark(\"dark\");\n    } else {\n      color.current.style.backgroundColor = \"#ccc\";\n      color.current.style.color = \"#000\";\n      setDark(\"light\");\n    }\n  };\n\n  return __jsx(ThemeProvider, {\n    theme: customTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: handleColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \" color\"), __jsx(Box, {\n    ref: color,\n    position: \"fixed\",\n    right: \"5px\",\n    top: \"45%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/develop/blog/client/pages/_app.tsx"],"names":["ThemeProvider","Button","Box","customTheme","React","useRef","useState","MyApp","Component","pageProps","dark","setDark","color","handleColor","current","style","backgroundColor"],"mappings":";;;;;AAAA,OAAO,uBAAP;AACA,SACEA,aADF,EAIEC,MAJF,EAKEC,GALF,QAMO,iBANP;AAOA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAMM,KAAK,GAAGP,MAAM,CAAC,IAAD,CAApB;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIH,IAAI,KAAK,OAAb,EAAsB;AACpBE,MAAAA,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACAJ,MAAAA,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBH,KAApB,GAA4B,MAA5B;AACAD,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD,KAJD,MAIO;AACLC,MAAAA,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,MAAtC;AACAJ,MAAAA,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBH,KAApB,GAA4B,MAA5B;AACAD,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD;AACF,GAVD;;AAWA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAER,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEU,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,GAAD;AAAK,IAAA,GAAG,EAAED,KAAV;AAAiB,IAAA,QAAQ,EAAC,OAA1B;AAAkC,IAAA,KAAK,EAAC,KAAxC;AAA8C,IAAA,GAAG,EAAC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,CADF;AAQD;;AAED,eAAeF,KAAf","sourcesContent":["import \"../styles/globals.css\"\nimport {\n  ThemeProvider,\n  ColorModeProvider,\n  useColorMode,\n  Button,\n  Box,\n} from \"@chakra-ui/core\"\nimport customTheme from \"../utils/theme\"\nimport React, { useRef, useState } from \"react\"\n\nfunction MyApp({ Component, pageProps }) {\n  const [dark, setDark] = useState(\"light\")\n  const color = useRef(null)\n\n  const handleColor = () => {\n    if (dark === \"light\") {\n      color.current.style.backgroundColor = \"#000\"\n      color.current.style.color = \"#fff\"\n      setDark(\"dark\")\n    } else {\n      color.current.style.backgroundColor = \"#ccc\"\n      color.current.style.color = \"#000\"\n      setDark(\"light\")\n    }\n  }\n  return (\n    <ThemeProvider theme={customTheme}>\n      <Button onClick={handleColor}> color</Button>\n      <Box ref={color} position=\"fixed\" right=\"5px\" top=\"45%\">\n        <Component {...pageProps} />\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}