{"ast":null,"code":"var __jsx = React.createElement;\nimport { Box } from \"@chakra-ui/core\";\nimport React, { useRef } from 'react';\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport dark from \"react-syntax-highlighter/dist/cjs/styles/hljs/a11y-dark\";\nexport const handleLink = props => {\n  const href = useRef(null);\n\n  const handleEnter = () => {\n    href.current.style.color = \"#090\";\n  };\n\n  const handleLeave = () => {\n    href.current.style.color = \"#00c\";\n  };\n\n  return __jsx(\"span\", {\n    ref: href,\n    onMouseEnter: handleEnter,\n    onMouseLeave: handleLeave,\n    style: {\n      color: '#00c'\n    }\n  }, __jsx(\"a\", {\n    href: `${props.href}`,\n    target: \"_blank\"\n  }, props.href));\n};\nexport const handleCode = ({\n  value,\n  language\n}) => {\n  return __jsx(Box, {\n    lineHeight: \"20px\",\n    fontWeight: \"500\",\n    fontSize: \"12px\"\n  }, __jsx(SyntaxHighlighter, {\n    showLineNumbers: true,\n    startingLineNumber: 1,\n    language: language !== null && language !== void 0 ? language : null,\n    style: dark,\n    lineNumberStyle: {\n      color: \"#ddd\",\n      fontSize: 12\n    },\n    wrapLines: true\n  }, value !== null && value !== void 0 ? value : null));\n};\nexport const handleImage = ({\n  alt,\n  src,\n  title\n}) => __jsx(\"a\", {\n  href: `${src}`,\n  target: \"_blank\"\n}, __jsx(\"img\", {\n  alt: alt,\n  src: src,\n  title: title,\n  style: {\n    maxWidth: \"90%\",\n    margin: \"40px auto\",\n    display: \"table\"\n  }\n}));","map":null,"metadata":{},"sourceType":"module"}