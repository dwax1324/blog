{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/develop/blog/client/pages/edit/[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery } from \"../../generated/graphql\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\n\nvar edit = function edit() {\n  _s();\n\n  var router = Router;\n\n  var _useGetPostFromUrl = useGetPostFromUrl(),\n      data = _useGetPostFromUrl.data,\n      loading = _useGetPostFromUrl.loading;\n\n  var qwr = function qwr() {};\n\n  if (!data && !loading) console.log(1);else if (data && loading) console.log(1);else {\n    var _data$post;\n\n    var post = usePostQuery({\n      variables: {\n        id: data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.id\n      }\n    });\n    var idEl = useRef(null);\n    var passwordEl = useRef(null);\n    var title = data.post.title;\n    var description = data.post.description;\n\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var id, password;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // e.preventDefault();\n                id = idEl.current.value;\n                password = passwordEl.current.value;\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n  return __jsx(React.Fragment, null, __jsx(Formik, {\n    initialValues: {\n      id: \"\",\n      password: \"\"\n    },\n    onSubmit: qwe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    name: \"id\",\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"submit\"))));\n};\n\n_s(edit, \"D7mf97X7brj1hikmvysXZuaLQoA=\", false, function () {\n  return [useGetPostFromUrl, usePostQuery];\n});\n\nexport default withApollo({\n  ssr: false\n})(edit);","map":{"version":3,"sources":["/home/develop/blog/client/pages/edit/[id].tsx"],"names":["React","useRef","Router","withApollo","Formik","Form","usePostQuery","useGetPostFromUrl","edit","router","data","loading","qwr","console","log","post","variables","id","idEl","passwordEl","title","description","handleSubmit","current","value","password","qwe","ssr"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,YAAT,QAAoD,yBAApD;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,IAAMC,IAAkB,GAAG,SAArBA,IAAqB,GAAM;AAAA;;AAC/B,MAAMC,MAAM,GAAGP,MAAf;;AAD+B,2BAELK,iBAAiB,EAFZ;AAAA,MAEvBG,IAFuB,sBAEvBA,IAFuB;AAAA,MAEjBC,OAFiB,sBAEjBA,OAFiB;;AAI/B,MAAMC,GAAG,GAAG,SAANA,GAAM,GAAM,CAAE,CAApB;;AACA,MAAI,CAACF,IAAD,IAAS,CAACC,OAAd,EAAuBE,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAvB,KACK,IAAIJ,IAAI,IAAIC,OAAZ,EAAqBE,OAAO,CAACC,GAAR,CAAY,CAAZ,EAArB,KACA;AAAA;;AACH,QAAMC,IAAI,GAAGT,YAAY,CAAC;AACxBU,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAEP,IAAF,aAAEA,IAAF,qCAAEA,IAAI,CAAEK,IAAR,+CAAE,WAAYE;AAAlB;AADa,KAAD,CAAzB;AAGA,QAAMC,IAAI,GAAGjB,MAAM,CAAC,IAAD,CAAnB;AACA,QAAMkB,UAAU,GAAGlB,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMmB,KAAK,GAAGV,IAAI,CAACK,IAAL,CAAUK,KAAxB;AACA,QAAMC,WAAW,GAAGX,IAAI,CAACK,IAAL,CAAUM,WAA9B;;AACA,QAAIC,YAAY;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB;AACML,gBAAAA,EAFW,GAENC,IAAI,CAACK,OAAL,CAAaC,KAFP;AAGXC,gBAAAA,QAHW,GAGAN,UAAU,CAACI,OAAX,CAAmBC,KAHnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZF,YAAY;AAAA;AAAA;AAAA,OAAhB;AAKD;AACD,SACE,4BACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbL,MAAAA,EAAE,EAAE,EADS;AAEbQ,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,QAAQ,EAAEC,GALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAPF,CADF,CADF;AAiBD,CAtCD;;GAAMlB,I;UAEsBD,iB,EAMXD,Y;;;AAgCjB,eAAeH,UAAU,CAAC;AAAEwB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2BnB,IAA3B,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery, useUpdatePostMutation } from \"../../generated/graphql\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { promises } from \"fs\";\nconst edit: React.FC<{}> = () => {\n  const router = Router;\n  const { data, loading } = useGetPostFromUrl();\n\n  const qwr = () => {};\n  if (!data && !loading) console.log(1);\n  else if (data && loading) console.log(1);\n  else {\n    const post = usePostQuery({\n      variables: { id: data?.post?.id },\n    });\n    const idEl = useRef(null);\n    const passwordEl = useRef(null);\n    const title = data.post.title;\n    const description = data.post.description;\n    let handleSubmit = async () => {\n      // e.preventDefault();\n      const id = idEl.current.value;\n      const password = passwordEl.current.value;\n    };\n  }\n  return (\n    <>\n      <Formik\n        initialValues={{\n          id: \"\",\n          password: \"\",\n        }}\n        onSubmit={qwe}\n      >\n        <Form>\n          <input name=\"id\" type=\"text\" />\n          <input name=\"password\" type=\"password\" />\n          <button type=\"submit\">submit</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default withApollo({ ssr: false })(edit);\n"]},"metadata":{},"sourceType":"module"}