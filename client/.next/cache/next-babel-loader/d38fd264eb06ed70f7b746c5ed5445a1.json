{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/develop/blog/client/pages/edit/[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\n\nvar edit = function edit() {\n  _s();\n\n  var _data$post;\n\n  var router = Router;\n\n  var _useGetPostFromUrl = useGetPostFromUrl(),\n      data = _useGetPostFromUrl.data; // const post = usePostQuery({\n  //   variables: { id: data?.post?.id },\n  // });\n\n\n  console.log(data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.id);\n  var idEl = useRef(null);\n  var passwordEl = useRef(null); // const title = data.post.title;\n  // const description = data.post.description;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var id, password;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // e.preventDefault();\n              id = idEl.current.value;\n              password = passwordEl.current.value;\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Formik, {\n    initialValues: {\n      id: \"\",\n      password: \"\"\n    },\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    name: \"id\",\n    ref: idEl,\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", {\n    name: \"password\",\n    ref: passwordEl,\n    type: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"submit\"))));\n};\n\n_s(edit, \"uQp83lCSOB6spOnPMUwzzKfYDrE=\", false, function () {\n  return [useGetPostFromUrl];\n});\n\nexport default withApollo({\n  ssr: false\n})(edit);","map":{"version":3,"sources":["/home/develop/blog/client/pages/edit/[id].tsx"],"names":["React","useRef","Router","withApollo","Formik","Form","useGetPostFromUrl","edit","router","data","console","log","post","id","idEl","passwordEl","handleSubmit","current","value","password","ssr"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;;AACA,IAAMC,IAAkB,GAAG,SAArBA,IAAqB,GAAM;AAAA;;AAAA;;AAC/B,MAAMC,MAAM,GAAGN,MAAf;;AAD+B,2BAEdI,iBAAiB,EAFH;AAAA,MAEvBG,IAFuB,sBAEvBA,IAFuB,EAG/B;AACA;AACA;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,aAAYA,IAAZ,qCAAYA,IAAI,CAAEG,IAAlB,+CAAY,WAAYC,EAAxB;AACA,MAAMC,IAAI,GAAGb,MAAM,CAAC,IAAD,CAAnB;AACA,MAAMc,UAAU,GAAGd,MAAM,CAAC,IAAD,CAAzB,CAR+B,CAS/B;AACA;;AACA,MAAIe,YAAY;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjB;AACMH,cAAAA,EAFW,GAENC,IAAI,CAACG,OAAL,CAAaC,KAFP;AAGXC,cAAAA,QAHW,GAGAJ,UAAU,CAACE,OAAX,CAAmBC,KAHnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZF,YAAY;AAAA;AAAA;AAAA,KAAhB;;AAKA,SACE,4BACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbH,MAAAA,EAAE,EAAE,EADS;AAEbM,MAAAA,QAAQ,EAAE;AAFG,KADjB;AAKE,IAAA,QAAQ,EAAEH,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,GAAG,EAAEF,IAAtB;AAA4B,IAAA,IAAI,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEC,UAA5B;AAAwC,IAAA,IAAI,EAAC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CAPF,CADF,CADF;AAiBD,CAjCD;;GAAMR,I;UAEaD,iB;;;AAiCnB,eAAeH,UAAU,CAAC;AAAEiB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2Bb,IAA3B,CAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery, useUpdatePostMutation } from \"../../generated/graphql\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nconst edit: React.FC<{}> = () => {\n  const router = Router;\n  const { data } = useGetPostFromUrl();\n  // const post = usePostQuery({\n  //   variables: { id: data?.post?.id },\n  // });\n  console.log(data?.post?.id);\n  const idEl = useRef(null);\n  const passwordEl = useRef(null);\n  // const title = data.post.title;\n  // const description = data.post.description;\n  let handleSubmit = async () => {\n    // e.preventDefault();\n    const id = idEl.current.value;\n    const password = passwordEl.current.value;\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{\n          id: \"\",\n          password: \"\",\n        }}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <input name=\"id\" ref={idEl} type=\"text\" />\n          <input name=\"password\" ref={passwordEl} type=\"password\" />\n          <button type=\"submit\">submit</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default withApollo({ ssr: false })(edit);\n"]},"metadata":{},"sourceType":"module"}