{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/develop/blog/client/pages/edit/[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery } from \"../../generated/graphql\";\nimport { Box, Button, Input } from \"@chakra-ui/core\";\nimport { useGetIntId } from \"../../utils/useGetIntId\";\n\nvar edit = function edit() {\n  _s();\n\n  var router = Router;\n\n  var handleSubmit = function handleSubmit() {};\n\n  var intId = useGetIntId();\n\n  var _usePostQuery = usePostQuery({\n    skip: intId === -1,\n    variables: {\n      id: intId\n    }\n  }),\n      data = _usePostQuery.data,\n      loading = _usePostQuery.loading;\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  if (loading) {\n    return __jsx(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  if (!(data === null || data === void 0 ? void 0 : data.post)) {\n    return __jsx(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"cout not find post\");\n  }\n\n  return __jsx(React.Fragment, null, !data ? \"\" : __jsx(Formik, {\n    initialValues: {\n      title: \"qwrwqrwrqr\"\n    },\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var isSubmitting = _ref.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      name: \"title\",\n      placeholder: \"title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }), __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, \"submit\"));\n  }));\n};\n\n_s(edit, \"yCoYPTMyG5fnbCNIkm2sK1q+g1Q=\", false, function () {\n  return [useGetIntId, usePostQuery];\n});\n\nexport default withApollo({\n  ssr: false\n})(edit);","map":{"version":3,"sources":["/home/develop/blog/client/pages/edit/[id].tsx"],"names":["React","useState","Router","withApollo","Formik","Form","usePostQuery","Box","Button","Input","useGetIntId","edit","router","handleSubmit","intId","skip","variables","id","data","loading","title","setTitle","post","isSubmitting","ssr"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,YAAT,QAAoD,yBAApD;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,iBAAnC;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AACA,IAAMC,IAAkB,GAAG,SAArBA,IAAqB,GAAM;AAAA;;AAC/B,MAAMC,MAAM,GAAGV,MAAf;;AACA,MAAMW,YAAY,GAAG,SAAfA,YAAe,GAAM,CAAE,CAA7B;;AACA,MAAMC,KAAK,GAAGJ,WAAW,EAAzB;;AAH+B,sBAILJ,YAAY,CAAC;AACrCS,IAAAA,IAAI,EAAED,KAAK,KAAK,CAAC,CADoB;AAErCE,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEH;AADK;AAF0B,GAAD,CAJP;AAAA,MAIvBI,IAJuB,iBAIvBA,IAJuB;AAAA,MAIjBC,OAJiB,iBAIjBA,OAJiB;;AAAA,kBAULlB,QAAQ,CAAC,EAAD,CAVH;AAAA,MAUxBmB,KAVwB;AAAA,MAUjBC,QAViB;;AAY/B,MAAIF,OAAJ,EAAa;AACX,WAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AACD,MAAI,EAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,IAAP,CAAJ,EAAiB;AACf,WAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACD;;AACD,SACE,4BACG,CAACJ,IAAD,GACC,EADD,GAGC,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbE,MAAAA,KAAK,EAAE;AADM,KADjB;AAIE,IAAA,QAAQ,EAAEP,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG;AAAA,QAAGU,YAAH,QAAGA,YAAH;AAAA,WACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,WAAW,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADD;AAAA,GANH,CAJJ,CADF;AAqBD,CAvCD;;GAAMZ,I;UAGUD,W,EACYJ,Y;;;AAqC5B,eAAeH,UAAU,CAAC;AAAEqB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2Bb,IAA3B,CAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Router from \"next/router\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { Formik, Form } from \"formik\";\nimport { usePostQuery, useUpdatePostMutation } from \"../../generated/graphql\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { Box, Button, Input } from \"@chakra-ui/core\";\nimport { useGetIntId } from \"../../utils/useGetIntId\";\nconst edit: React.FC<{}> = () => {\n  const router = Router;\n  const handleSubmit = () => {};\n  const intId = useGetIntId();\n  const { data, loading } = usePostQuery({\n    skip: intId === -1,\n    variables: {\n      id: intId,\n    },\n  });\n  const [title, setTitle] = useState(\"\");\n\n  if (loading) {\n    return <Box>loading...</Box>;\n  }\n  if (!data?.post) {\n    return <Box>cout not find post</Box>;\n  }\n  return (\n    <>\n      {!data ? (\n        \"\"\n      ) : (\n        <Formik\n          initialValues={{\n            title: \"qwrwqrwrqr\",\n          }}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Input name=\"title\" placeholder=\"title\" />\n              <Button>submit</Button>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </>\n  );\n};\n\nexport default withApollo({ ssr: false })(edit);\n"]},"metadata":{},"sourceType":"module"}