{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport \"../styles/globals.css\";\nimport { ThemeProvider, ColorModeProvider, useColorMode, Button } from \"@chakra-ui/core\";\nimport customTheme from \"../utils/theme\";\nimport React from \"react\";\n\nfunction ColorModeExample() {\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  return __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    onClick: toggleColorMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"Toggle \", colorMode === \"light\" ? \"Dark\" : \"Light\"));\n}\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(ThemeProvider, {\n    theme: customTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(ColorModeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/develop/blog/client/pages/_app.tsx"],"names":["ThemeProvider","ColorModeProvider","useColorMode","Button","customTheme","React","ColorModeExample","colorMode","toggleColorMode","MyApp","Component","pageProps"],"mappings":";;;;;AAAA,OAAO,uBAAP;AACA,SACEA,aADF,EAEEC,iBAFF,EAIEC,YAJF,EAKEC,MALF,QAMO,iBANP;AAOA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,gBAAT,GAA4B;AAC1B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCN,YAAY,EAAnD;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUD,SAAS,KAAK,OAAd,GAAwB,MAAxB,GAAiC,OAD3C,CADF,CADF;AAOD;;AAED,SAASE,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEP,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD;;AAED,eAAeF,KAAf","sourcesContent":["import \"../styles/globals.css\"\nimport {\n  ThemeProvider,\n  ColorModeProvider,\n  DarkMode,\n  useColorMode,\n  Button,\n} from \"@chakra-ui/core\"\nimport customTheme from \"../utils/theme\"\nimport React from \"react\"\n\nfunction ColorModeExample() {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <header>\n      <Button onClick={toggleColorMode}>\n        Toggle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\n      </Button>\n    </header>\n  )\n}\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <ColorModeProvider>\n        <Component {...pageProps} />\n      </ColorModeProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}