{"ast":null,"code":"var _jsxFileName = \"/home/develop/blog/client/pages/post/[id].tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useMeQuery } from \"../../generated/graphql\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport NavBar from \"../../components/NavBar\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { Box } from \"@chakra-ui/core\";\nimport EditDeleteButtons from \"../../components/EditDeleteButtons\";\nimport dark from \"react-syntax-highlighter/dist/cjs/styles/hljs/a11y-dark\";\n\nconst PostPage = props => {\n  var _me$data, _data$post, _data$post2, _data$post3;\n\n  const {\n    data,\n    loading\n  } = useGetPostFromUrl();\n  const me = useMeQuery();\n  const Me = (_me$data = me.data) === null || _me$data === void 0 ? void 0 : _me$data.me;\n  console.log(data);\n  return __jsx(React.Fragment, null, Me ? __jsx(Box, {\n    position: \"fixed\",\n    right: \"15px\",\n    top: \"45vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(EditDeleteButtons, {\n    postId: data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), \" \") : \"\", __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mt: \"20vh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: \"edit-container\",\n    minWidth: \"700px\",\n    w: \"55%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    w: \"80%\",\n    borderBottom: \"1px solid #666\",\n    p: \"50px\",\n    textAlign: \"center\",\n    fontSize: \"42px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$post2 = data.post) === null || _data$post2 === void 0 ? void 0 : _data$post2.title), __jsx(Box, {\n    p: \"20px\",\n    mt: \"5%\",\n    textAlign: \"left\",\n    w: \"80%\",\n    lineHeight: \"80%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(ReactMarkdown, {\n    escapeHtml: false,\n    source: data === null || data === void 0 ? void 0 : (_data$post3 = data.post) === null || _data$post3 === void 0 ? void 0 : _data$post3.description,\n    renderers: {\n      code: Component,\n      image: ({\n        alt,\n        src,\n        title\n      }) => __jsx(\"img\", {\n        alt: alt,\n        src: src,\n        title: title,\n        style: {\n          maxWidth: \"700px\",\n          margin: \"0 auto\",\n          display: \"table\",\n          padding: \"40px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst Component = ({\n  value,\n  language\n}) => {\n  return __jsx(Box, {\n    lineHeight: \"20px\",\n    fontWeight: \"500\",\n    fontSize: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(SyntaxHighlighter, {\n    showLineNumbers: true,\n    startingLineNumber: 1,\n    language: language !== null && language !== void 0 ? language : null,\n    style: dark,\n    lineNumberStyle: {\n      color: \"#ddd\",\n      fontSize: 12\n    },\n    wrapLines: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, value !== null && value !== void 0 ? value : null));\n};\n\nexport default withApollo({\n  ssr: true\n})(PostPage);","map":{"version":3,"sources":["/home/develop/blog/client/pages/post/[id].tsx"],"names":["React","useMeQuery","ReactMarkdown","useGetPostFromUrl","withApollo","NavBar","SyntaxHighlighter","Box","EditDeleteButtons","dark","PostPage","props","data","loading","me","Me","console","log","post","id","title","description","code","Component","image","alt","src","maxWidth","margin","display","padding","value","language","color","fontSize","ssr"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { useMeQuery, usePostQuery } from \"../../generated/graphql\"\nimport NextLink from \"next/link\"\nimport ReactMarkdown from \"react-markdown\"\nimport Link from \"next/link\"\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\"\nimport { withApollo } from \"../../utils/withApollo\"\nimport NavBar from \"../../components/NavBar\"\nimport SyntaxHighlighter from \"react-syntax-highlighter\"\nimport { Box } from \"@chakra-ui/core\"\nimport EditDeleteButtons from \"../../components/EditDeleteButtons\"\nimport CustomDocument from \"../_document\"\nimport dark from \"react-syntax-highlighter/dist/cjs/styles/hljs/a11y-dark\"\ninterface postPagesProps<> {}\n\nconst PostPage: React.FC<postPagesProps> = (props) => {\n  const { data, loading } = useGetPostFromUrl()\n  const me = useMeQuery()\n  const Me = me.data?.me\n  console.log(data)\n  return (\n    <>\n      {Me ? (\n        <Box position=\"fixed\" right=\"15px\" top=\"45vh\">\n          <EditDeleteButtons postId={data?.post?.id} />{\" \"}\n        </Box>\n      ) : (\n        \"\"\n      )}\n      <NavBar />\n      <Box display=\"flex\" justifyContent=\"center\" mt=\"20vh\">\n        <Box\n          className=\"edit-container\"\n          minWidth=\"700px\"\n          w=\"55%\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n        >\n          <Box\n            w=\"80%\"\n            borderBottom=\"1px solid #666\"\n            p=\"50px\"\n            textAlign=\"center\"\n            fontSize=\"42px\"\n          >\n            {data?.post?.title}\n          </Box>\n          <Box p=\"20px\" mt=\"5%\" textAlign=\"left\" w=\"80%\" lineHeight=\"80%\">\n            <ReactMarkdown\n              escapeHtml={false}\n              source={data?.post?.description}\n              renderers={{\n                code: Component,\n                image: ({\n                  alt,\n                  src,\n                  title,\n                }: {\n                  alt?: string\n                  src?: string\n                  title?: string\n                }) => (\n                  <img\n                    alt={alt}\n                    src={src}\n                    title={title}\n                    style={{\n                      maxWidth: \"700px\",\n                      margin: \"0 auto\",\n                      display: \"table\",\n                      padding: \"40px\",\n                    }}\n                  />\n                ),\n              }}\n            ></ReactMarkdown>\n          </Box>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nconst Component = ({ value, language }) => {\n  return (\n    <Box lineHeight={\"20px\"} fontWeight={\"500\"} fontSize=\"12px\">\n      <SyntaxHighlighter\n        showLineNumbers={true}\n        startingLineNumber={1}\n        language={language ?? null}\n        style={dark}\n        lineNumberStyle={{ color: \"#ddd\", fontSize: 12 }}\n        wrapLines={true}\n      >\n        {value ?? null}\n      </SyntaxHighlighter>\n    </Box>\n  )\n}\n\nexport default withApollo({ ssr: true })(PostPage)\n"]},"metadata":{},"sourceType":"module"}