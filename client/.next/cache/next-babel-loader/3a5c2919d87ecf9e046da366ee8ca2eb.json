{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/develop/blog/client/pages/rel.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Text } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport { usePostsQuery, useTagsQuery } from \"../generated/graphql\";\nimport { withApollo } from \"../utils/withApollo\";\n\nvar rel = function rel() {\n  _s();\n\n  var _data$tags;\n\n  var _useTagsQuery = useTagsQuery(),\n      data = _useTagsQuery.data,\n      loading = _useTagsQuery.loading;\n\n  var _usePostsQuery = usePostsQuery(),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      posts = _usePostsQuery2[0];\n\n  if (!data && !loading) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 35\n    }\n  }, \"server error\");\n  var tags = data === null || data === void 0 ? void 0 : data.tags; // useEffect(() => {\n  // tags =\n  // }, [data?.tags])\n\n  console.log(tags);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    w: \"100vw\",\n    h: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, posts === null || posts === void 0 ? void 0 : posts.map(function (t) {\n    return __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, t.text, \"(\", t.postsLength, \")\");\n  }))), __jsx(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    border: \"1px solid black\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$tags = data.tags) === null || _data$tags === void 0 ? void 0 : _data$tags.map(function (t) {\n    return __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    }, t.text, \"(\", t.postsLength, \")\");\n  })))));\n};\n\n_s(rel, \"qZatIfRMyR8ZtwFh8EE9rjwkkh0=\", false, function () {\n  return [useTagsQuery, usePostsQuery];\n});\n\nexport default withApollo({\n  ssr: true\n})(rel);","map":{"version":3,"sources":["/home/develop/blog/client/pages/rel.tsx"],"names":["Box","Text","React","usePostsQuery","useTagsQuery","withApollo","rel","data","loading","posts","tags","console","log","map","t","text","postsLength","ssr"],"mappings":";;;;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAiC,OAAjC;AAEA,SAA4BC,aAA5B,EAA2CC,YAA3C,QAA+D,sBAA/D;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAIA,IAAMC,GAAiB,GAAG,SAApBA,GAAoB,GAAM;AAAA;;AAAA;;AAAA,sBACFF,YAAY,EADV;AAAA,MACpBG,IADoB,iBACpBA,IADoB;AAAA,MACdC,OADc,iBACdA,OADc;;AAAA,uBAEZL,aAAa,EAFD;AAAA;AAAA,MAErBM,KAFqB;;AAG5B,MAAI,CAACF,IAAD,IAAS,CAACC,OAAd,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAEvB,MAAIE,IAAI,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,IAAjB,CAL4B,CAM5B;AACA;AACA;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACI,4BACI,MAAC,GAAD;AAAK,IAAA,CAAC,EAAC,OAAP;AAAe,IAAA,CAAC,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,MAAjC;AAAwC,IAAA,cAAc,EAAC,QAAvD;AAAgE,IAAA,UAAU,EAAC,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,CAAC,EAAC,OAAP;AAAe,IAAA,CAAC,EAAC,OAAjB;AAAyB,IAAA,MAAM,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAC,MAA1D;AAAiE,IAAA,cAAc,EAAC,QAAhF;AAAyF,IAAA,UAAU,EAAC,QAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KADL,aACKA,KADL,uBACKA,KAAK,CAAEI,GAAP,CAAW,UAACC,CAAD;AAAA,WACR,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,CAAC,CAACC,IAAT,OAAgBD,CAAC,CAACE,WAAlB,MADQ;AAAA,GAAX,CADL,CADJ,CADJ,EAQI,MAAC,GAAD;AAAK,IAAA,CAAC,EAAC,OAAP;AAAe,IAAA,CAAC,EAAC,OAAjB;AAAyB,IAAA,MAAM,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAC,MAA1D;AAAiE,IAAA,cAAc,EAAC,QAAhF;AAAyF,IAAA,UAAU,EAAC,QAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,IADL,aACKA,IADL,qCACKA,IAAI,CAAEG,IADX,+CACK,WAAYG,GAAZ,CAAgB,UAACC,CAAD;AAAA,WACb,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,CAAC,CAACC,IAAT,OAAgBD,CAAC,CAACE,WAAlB,MADa;AAAA,GAAhB,CADL,CADJ,CARJ,CADJ,CADJ;AAqBH,CAhCD;;GAAMV,G;UACwBF,Y,EACVD,a;;;AA+BpB,eAAeE,UAAU,CAAC;AAAEY,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BX,GAA1B,CAAf","sourcesContent":["import { Box, Text } from \"@chakra-ui/core\"\nimport React, { useEffect } from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport { usePostsLazyQuery, usePostsQuery, useTagsQuery } from \"../generated/graphql\"\nimport { withApollo } from \"../utils/withApollo\"\n\ninterface relProps { }\n\nconst rel: React.FC<{}> = () => {\n    const { data, loading } = useTagsQuery()\n    const [posts] = usePostsQuery()\n    if (!data && !loading) return <div>server error</div>\n\n    let tags = data?.tags\n    // useEffect(() => {\n    // tags =\n    // }, [data?.tags])\n\n    console.log(tags)\n    return (\n        <>\n            <Box w=\"100vw\" h=\"100vh\" display=\"flex\" justifyContent=\"center\" alignItems='center'>\n                <Box w=\"400px\" h=\"400px\" border=\"1px solid black\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Box>\n                        {posts?.map((t) => (\n                            <Text>{t.text}({t.postsLength})</Text>\n                        ))}\n                    </Box>\n                </Box>\n                <Box w=\"400px\" h=\"400px\" border=\"1px solid black\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Box>\n                        {data?.tags?.map((t) => (\n                            <Text>{t.text}({t.postsLength})</Text>\n                        ))}\n                    </Box>\n                </Box>\n            </Box>\n\n        </>\n    )\n}\nexport default withApollo({ ssr: true })(rel)\n"]},"metadata":{},"sourceType":"module"}