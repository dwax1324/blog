{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport { Box } from \"@chakra-ui/core\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport EditDeleteButtons from \"../../components/EditDeleteButtons\";\nimport { useMeQuery } from \"../../generated/graphql\";\nimport { useGetPostFromUrl } from \"../../utils/useGetPostFromUrl\";\nimport { withApollo } from \"../../utils/withApollo\";\nimport { handleImage, handleCode, handleLink } from '../../utils/markdownRenderers';\n\nconst PostPage = props => {\n  var _me$data, _data$post, _data$post2, _data$post3;\n\n  const {\n    data,\n    loading\n  } = useGetPostFromUrl();\n  const me = useMeQuery();\n  const Me = (_me$data = me.data) === null || _me$data === void 0 ? void 0 : _me$data.me;\n  console.log(data);\n  return __jsx(React.Fragment, null, __jsx(_JSXStyle, {\n    id: \"3663789983\"\n  }, [\"@media screen and (max-width:768px){.postId-title{font-size:24px !important;}.postId-time{font-size:14px !important;}.postId-description{width:100% !important;}}\"]), Me ? __jsx(Box, {\n    position: \"fixed\",\n    right: \"15px\",\n    top: \"45vh\"\n  }, __jsx(EditDeleteButtons, {\n    postId: parseInt(data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.id)\n  }), \" \") : __jsx(\"div\", {\n    className: \"jsx-3663789983\"\n  }), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    mt: \"20vh\"\n  }, __jsx(Box, {\n    className: \"edit-container\",\n    minWidth: \"100vw\",\n    w: \"55%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    p: \"25px\"\n  }, __jsx(Box, {\n    className: \"postId-title\",\n    w: \"65%\",\n    borderBottom: \"1px solid #666\",\n    p: \"50px\",\n    textAlign: \"center\",\n    fontSize: \"42px\"\n  }, data === null || data === void 0 ? void 0 : (_data$post2 = data.post) === null || _data$post2 === void 0 ? void 0 : _data$post2.title), __jsx(Box, {\n    className: \"postId-time\",\n    w: \"100%\",\n    textAlign: \"end\",\n    mt: \"50px\"\n  }, data === null || data === void 0 ? void 0 : data.post.createdAt.slice(0, 10)), __jsx(Box, {\n    className: \"postId-description\",\n    p: \"20px\",\n    mt: \"5%\",\n    textAlign: \"left\",\n    w: \"768px\",\n    lineHeight: \"150%\"\n  }, __jsx(ReactMarkdown, {\n    escapeHtml: false,\n    source: data === null || data === void 0 ? void 0 : (_data$post3 = data.post) === null || _data$post3 === void 0 ? void 0 : _data$post3.description,\n    renderers: {\n      code: handleCode,\n      image: handleImage,\n      link: handleLink\n    }\n  })))));\n};\n\nexport default withApollo({\n  ssr: true\n})(PostPage);","map":null,"metadata":{},"sourceType":"module"}