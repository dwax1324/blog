{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/develop/blog/client/pages/_app.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport \"../styles/globals.css\";\nimport { ThemeProvider, ColorModeProvider, useColorMode, Button } from \"@chakra-ui/core\";\nimport customTheme from \"../utils/theme\";\nimport React from \"react\";\n\nfunction ColorModeExample() {\n  _s();\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  return __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  });\n}\n\n_s(ColorModeExample, \"uURyIwMgIfFLStF4nJMrxbb6o/4=\", false, function () {\n  return [useColorMode];\n});\n\n_c = ColorModeExample;\n\nfunction MyApp(_ref) {\n  _s2();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useColorMode2 = useColorMode(),\n      colorMode = _useColorMode2.colorMode,\n      toggleColorMode = _useColorMode2.toggleColorMode;\n\n  return __jsx(ThemeProvider, {\n    theme: customTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(ColorModeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: toggleColorMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Toggle \", colorMode === \"light\" ? \"Dark\" : \"Light\"), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }))));\n}\n\n_s2(MyApp, \"uURyIwMgIfFLStF4nJMrxbb6o/4=\", false, function () {\n  return [useColorMode];\n});\n\n_c2 = MyApp;\nexport default MyApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorModeExample\");\n$RefreshReg$(_c2, \"MyApp\");","map":{"version":3,"sources":["/home/develop/blog/client/pages/_app.tsx"],"names":["ThemeProvider","ColorModeProvider","useColorMode","Button","customTheme","React","ColorModeExample","colorMode","toggleColorMode","MyApp","Component","pageProps"],"mappings":";;;;;;;AAAA,OAAO,uBAAP;AACA,SACEA,aADF,EAEEC,iBAFF,EAIEC,YAJF,EAKEC,MALF,QAMO,iBANP;AAOA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAAA,sBACaJ,YAAY,EADzB;AAAA,MAClBK,SADkB,iBAClBA,SADkB;AAAA,MACPC,eADO,iBACPA,eADO;;AAE1B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;GAHQF,gB;UACgCJ,Y;;;KADhCI,gB;;AAKT,SAASG,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,uBACAT,YAAY,EADZ;AAAA,MAC/BK,SAD+B,kBAC/BA,SAD+B;AAAA,MACpBC,eADoB,kBACpBA,eADoB;;AAEvC,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEJ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUD,SAAS,KAAK,OAAd,GAAwB,MAAxB,GAAiC,OAD3C,CADF,EAIE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,CADF,CADF;AAUD;;IAZQF,K;UACgCP,Y;;;MADhCO,K;AAcT,eAAeA,KAAf","sourcesContent":["import \"../styles/globals.css\"\nimport {\n  ThemeProvider,\n  ColorModeProvider,\n  DarkMode,\n  useColorMode,\n  Button,\n} from \"@chakra-ui/core\"\nimport customTheme from \"../utils/theme\"\nimport React from \"react\"\n\nfunction ColorModeExample() {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return <header></header>\n}\n\nfunction MyApp({ Component, pageProps }) {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <ThemeProvider theme={customTheme}>\n      <ColorModeProvider>\n        <Button onClick={toggleColorMode}>\n          Toggle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\n        </Button>\n        <Component {...pageProps} />\n      </ColorModeProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}